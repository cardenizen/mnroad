--To change a "not null" column to nullable use:
--alter table TABLE_NAME modify (COLUMN_NAME constraint not_null null)

--SELECT min(id) minimum, max(id) maximum from Sensor;
SELECT min(id) minimum, max(id) maximum from Mat_Samples;
SELECT min(id) minimum, max(id) maximum from Layer;
SELECT min(id) minimum, max(id) maximum from Material;
SELECT min(id) minimum, max(id) maximum from Lane;
SELECT min(id) minimum, max(id) maximum from Cell;
SELECT min(id) minimum, max(id) maximum from Road_Section;
SELECT min(id) minimum, max(id) maximum from Facility;


purge RECYCLEBIN;

delete Sensor;
delete Mat_Samples;
delete Layer;
delete Material;
delete Lane;
delete Cell;
delete Road_Section;
delete Facility;
delete app_config;

--
DROP TABLE JSEC_ROLE_PERMISSION_REL PURGE;
DROP TABLE JSEC_USER_PERMISSION_REL PURGE;
DROP TABLE JSEC_PERMISSION PURGE;
DROP TABLE JSEC_USER_ROLE_REL PURGE;
DROP TABLE JSEC_USER PURGE;
DROP TABLE JSEC_ROLE PURGE;
--
Added dev backup D:\exports\mnrd\exp_mnrd_mnr.par on the DEV serve
APP_CONFIG, 
CELL, 
DYNAMIC_LOAD_TEST_DESCRIPTIONS, 
DYNAMIC_LOAD_TEST_VALUES, 
FACILITY, 
LANE, 
LAYER, 
MATERIAL, 
MAT_SAMPLES, 
ROAD_SECTION, 
TRANSVERSE_JOINT


DROP SEQUENCE MNROAD_ID_SEQ;
DROP SEQUENCE SENSOR_ID_SEQ;
DROP SEQUENCE PICKLIST_ID_SEQ;

SELECT 'CREATE SEQUENCE PICKLIST_ID_SEQ MINVALUE 1 START WITH ' || (select max(id)+1 from APP_CONFIG) || ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
SELECT 'CREATE SEQUENCE SENSOR_ID_SEQ MINVALUE 1 START WITH ' || (select max(id)+1 from sensor) || ' INCREMENT BY 1 CACHE 20;' FROM DUAL
SELECT 'CREATE SEQUENCE MNROAD_ID_SEQ MINVALUE 1 START WITH ' || MNROAD_ID_SEQ.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' FROM DUAL

DROP TABLE TRANSVERSE_JOINT PURGE;
DROP TABLE APP_CONFIG PURGE;
DROP TABLE SENSOR_EVALUATION PURGE;
DROP TABLE SENSOR PURGE;
DROP TABLE QUERY PURGE;
DROP TABLE SENSOR_model PURGE;
DROP TABLE MAT_SAMPLES PURGE;
DROP TABLE CELL_TRANSVERSE_JOINT PURGE;
DROP TABLE LAYER PURGE;
DROP TABLE MATERIAL PURGE;
DROP TABLE DISTRESS PURGE;
DROP TABLE LANE PURGE;
DROP TABLE CELL_CELL PURGE;
DROP TABLE CELL PURGE;
DROP TABLE ROAD_SECTION PURGE;
DROP TABLE VEHICLE_LOCATION PURGE;
DROP TABLE VEHICLE_PASS     PURGE;
DROP TABLE TRACKED_VEHICLE  PURGE;
DROP TABLE FACILITY PURGE;
DROP TABLE MAT_CONCRETE_MIX_DESIGNS PURGE;

SELECT 'CREATE SEQUENCE MNROAD_ID_SEQ MINVALUE 1 START WITH ' || MNROAD_ID_SEQ.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
DROP SEQUENCE MNROAD_ID_SEQ;
--
SELECT 'CREATE SEQUENCE SENSOR_ID_SEQ MINVALUE 1 START WITH ' || (select max(id)+1 from sensor) || ' INCREMENT BY 1 CACHE 20;' FROM DUAL;


CREATE TABLE APP_CONFIG
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   NAME varchar2(30) NOT NULL,
   PARAMETER varchar2(25) NOT NULL,
   STATUS varchar2(10) NOT NULL,
   VAL varchar2(4000),
   DATE_CREATED     TIMESTAMP NOT NULL,
   LAST_UPDATED     TIMESTAMP NOT NULL,
   CREATED_BY varchar2(10),
   LAST_UPDATED_BY varchar2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--
CREATE TABLE FACILITY
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   NAME VARCHAR2(400) NOT NULL,
   DESCRIPTION VARCHAR2(400) NOT NULL,
   DATE_CREATED  TIMESTAMP NOT NULL,
   LAST_UPDATED  TIMESTAMP NOT NULL
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--
CREATE TABLE ROAD_SECTION
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   DESCRIPTION VARCHAR2(400) NOT NULL,
   FACILITY_ID NUMBER(19) NOT NULL,
   START_STATION NUMBER(16,8) NOT NULL,
   END_STATION NUMBER(16,8) NOT NULL,
   ORIENTATION      VARCHAR2(25)
   DATE_CREATED  TIMESTAMP NOT NULL,
   LAST_UPDATED     TIMESTAMP NOT NULL,
   CREATED_BY       VARCHAR2(10),
   LAST_UPDATED_BY  VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--
ALTER TABLE ROAD_SECTION
    ADD CONSTRAINT FACILITY_FK
    FOREIGN KEY (FACILITY_ID)
    REFERENCES FACILITY(ID)
;
--
CREATE TABLE CELL
(
   ID                       NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION                  NUMBER(19) NOT NULL,
   CLASS                    VARCHAR2(255) NOT NULL,
   CELL_NUMBER              NUMBER(10) NOT NULL,
   CONSTRUCTION_ENDED_DATE  DATE NOT NULL,
   DEMOLISHED_DATE          DATE,
   DESIGN_LIFE              NUMBER(10),
   DRAINAGE_SYSTEM          VARCHAR2(255) NOT NULL,
   CELL_END_STATION         NUMBER(16,8),
   END_STATION              NUMBER(16,8) NOT NULL,
   NAME                     VARCHAR2(255) NOT NULL,
   ROAD_SECTION_ID          NUMBER(19) NOT NULL,
   CELL_START_STATION       NUMBER(16,8),
   START_STATION            NUMBER(16,8) NOT NULL,
   SUBSUMED_BY              VARCHAR2(500),
   DATE_CREATED             timestamp NOT NULL,
   LAST_UPDATED             timestamp NOT NULL,
   SHOULDER_TYPE            VARCHAR2(15),
   TIEBARS                  NUMBER(1),
   SURFACE_TEXTURE          VARCHAR2(255),
   HMA_DESIGN               VARCHAR2(255),
   MNDOT_MIX_SPECIFICATION  VARCHAR2(255),
   CREATED_BY               VARCHAR2(10),
   LAST_UPDATED_BY          VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE CELL
    ADD CONSTRAINT ROAD_SECTION_FK
    FOREIGN KEY (ROAD_SECTION_ID)
    REFERENCES ROAD_SECTION(ID)
;
ALTER TABLE CELL ADD CELL_COVERS_ID NUMBER(19);
ALTER TABLE CELL ADD CELL_COVERED_BY_ID number(19);
ALTER TABLE CELL
ADD CONSTRAINT FK_COVERS_CELL
FOREIGN KEY (CELL_COVERS_ID)
REFERENCES CELL(ID);
ALTER TABLE CELL
ADD CONSTRAINT FK_COVERED_BY_CELL
FOREIGN KEY (CELL_COVERED_BY_ID)
REFERENCES CELL(ID);
--
DROP TABLE CELL_CELL PURGE;
CREATE TABLE CELL_CELL
(
   CELL_COVERED_BY_ID decimal(19),
   CELL_ID decimal(19),
   CELL_COVERS_ID decimal(19)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE CELL_CELL
ADD CONSTRAINT FK_CELL_COVERED_BY
FOREIGN KEY (CELL_COVERED_BY_ID)
REFERENCES CELL(ID);
ALTER TABLE CELL_CELL
ADD CONSTRAINT FK_CELL_CELL
FOREIGN KEY (CELL_ID)
REFERENCES CELL(ID);
ALTER TABLE CELL_CELL
ADD CONSTRAINT FK_CELL_COVERS
FOREIGN KEY (CELL_COVERS_ID)
REFERENCES CELL(ID);


alter table lane add (offset_ref VARCHAR2(1))
select
--c.cell_number,
--'update lane set offset_ref=''-'' where id='||l.id||';'
'update lane set offset_ref=''+'' where id='||l.id||';'
from facility f  join road_section r on r.facility_id=f.id join cell c on c.road_section_id = r.id join lane l on l.cell_id=c.id
where (f.name = 'Mainline')
--where (f.name = 'Low Volume Road')
--where (f.name = 'Farm Road')
--where (f.name = 'Public Road')
--where (f.name = 'MnRoad Parking Lot')
--where (f.name = 'MnRoad Sidewalk')
--and (l.name='Driving' or l.name='Left Shldr')
and (l.name='Passing 1' or l.name='Right Shldr')
order by c.id, l.id, cell_number,lane_num

update sensor
set SENSOR_DEPTH_IN = abs(SENSOR_DEPTH_IN)
where SENSOR_DEPTH_IN < 0

-- Mainline passing lane sensors
SELECT * FROM sensor where
(cell between 1 and 23
or cell between 50 and 51
or cell between 60 and 63
or cell between 92 and 97
or cell in (105,106,113,114,205,206,213,214,305,313,314,405,413,414,513,514,614,714,814,914)
) and offset_ft > 0
order by cell,model,seq

CREATE TABLE LANE
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CELL_ID NUMBER(19) NOT NULL,
   LANE_NUM NUMBER(10) NOT NULL,
   NAME VARCHAR2(11) NOT NULL,
   WIDTH NUMBER(10) NOT NULL,
   OFFSET_REF VARCHAR(1),
   PANEL_LENGTH FLOAT(126),
   PANEL_WIDTH FLOAT(126),
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL,
   CREATED_BY       VARCHAR2(10),
   LAST_UPDATED_BY  VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE LANE
    ADD CONSTRAINT CELL_FK
    FOREIGN KEY (CELL_ID)
    REFERENCES CELL(ID)
;
--
CREATE TABLE TRANSVERSE_JOINT
(
   ID decimal(19)               PRIMARY KEY NOT NULL,
   VERSION                      NUMBER(19) NOT NULL,
   DOWEL_BAR_DIAMETER           NUMBER(8,2),
   DOWEL_BAR_LENGTH             NUMBER(8,2),
   DOWEL_BAR_TYPE               varchar2(255),
   LONGITUDINAL_OFFSET          NUMBER(8,2),
   NUM_DOWEL_BARS_PER_LANE      NUMBER(2),
   SEALANT_TYPE                 varchar2(255),
   SKEW_ANGLE                   NUMBER(8,2),
   TRANSVERSE_OFFSET            NUMBER(8,2),
   CELL_ID                      NUMBER(19),
   STATION                      NUMBER(16,8)
)
;
ALTER TABLE TRANSVERSE_JOINT
    ADD CONSTRAINT CELL_TJ_FK
    FOREIGN KEY (CELL_ID)
    REFERENCES CELL(ID) ON DELETE CASCADE
;
ALTER TABLE TRANSVERSE_JOINT
    ADD CONSTRAINT LAYER_TJ_FK
    FOREIGN KEY (LAYER_ID)
    REFERENCES LAYER(ID)
;
--
CREATE TABLE LAYER
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CONSTRUCT_END_DATE  DATE,
   CONSTRUCT_START_DATE  DATE NOT NULL,
   LANE_ID NUMBER(19),
   LAYER_NUM NUMBER(2) NOT NULL,
   MATERIAL_ID number(19) NOT NULL,
   THICKNESS NUMBER(8,3) NOT NULL,
   DOWEL_BAR_DIAMETER NUMBER(8,3),
   DOWEL_BAR_LENGTH NUMBER(8,3),
   FIBER_TYPE VARCHAR2(20 CHAR),
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL
   FIBER_TYPE varchar2(20),
   CREATED_BY       VARCHAR2(10),
   LAST_UPDATED_BY  VARCHAR2(10)
   )
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE LAYER
    ADD CONSTRAINT LANE_FK
    FOREIGN KEY (LANE_ID)
    REFERENCES LANE(ID)
;
--
CREATE TABLE MATERIAL
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   BASIC_MATERIAL VARCHAR2(255),
   DESCRIPTION VARCHAR2(255),
   MN_DOT_SPEC_NUMBER VARCHAR2(10),
   SPEC_YEAR NUMBER(10),
   DATE_CREATED                                                 TIMESTAMP NOT NULL,
   LAST_UPDATED                                                 TIMESTAMP NOT NULL
   BINDER                                                       VARCHAR2(10),
   MODIFIER                                                     VARCHAR2(250),
   FIBER_TYPE                                                   VARCHAR2(30),
   DESIGN_LEVEL                                                 VARCHAR2(20),
   COURSE                                                                       VARCHAR2(10),
   PERCENT_RAP                                                  NUMBER(10),
   GRADATION_NAME VARCHAR(50),
--
   COMPONENT_MODIFICATION VARCHAR2(255),
   DISPLAY_NAME VARCHAR2(255),
   PROCESS_MODIFICATION         VARCHAR2(255),
   CREATED_BY               VARCHAR2(10),
   LAST_UPDATED_BY          VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;

DROP TABLE MATERIAL_MAT_SAMPLES purge;
DROP TABLE MAT_SAMPLES PURGE;
CREATE TABLE MAT_SAMPLES
(
   MNROAD_ID VARCHAR2(11) NOT NULL,
   CELL NUMBER(10),
   STATION NUMBER(16,8),
   OFFSET NUMBER(8,2),
   SAMPLE_DATE         TIMESTAMP,
   MATERIAL_GROUP VARCHAR2(40),
   CONTAINER_TYPE VARCHAR2(30),
   STORAGE_LOCATION VARCHAR2(50),
   COMMENTS VARCHAR2(250),
   FIELD_ID VARCHAR2(25),
   CONTACT_PERSON VARCHAR2(24),
   COURSE VARCHAR2(8),
   LIFT_NUMBER NUMBER(10),
   DEPTH_CODE VARCHAR2(40),
   SAMPLE_DEPTH_TOP NUMBER(8,2),
   SAMPLE_DEPTH_BOTTOM NUMBER(8,2),
   SAMPLE_TIME VARCHAR2(30),
   SAMPLE_CURE_TIME NUMBER(7,2),
   SPEC VARCHAR2(15),
   DATE_CREATED        TIMESTAMP NOT NULL,
   LAST_UPDATED        TIMESTAMP NOT NULL
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CREATED_BY          VARCHAR2(10),
   LAST_UPDATED_BY     VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE TABLE MATERIAL_MAT_SAMPLES
(
   MATERIAL_CONSTITUENT_OF_ID decimal(19),
   MATERIAL_MNROAD_ID decimal(19)
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE MATERIAL_MAT_SAMPLES
ADD CONSTRAINT FKEFB36D12262CCDD7
FOREIGN KEY (MATERIAL_CONSTITUENT_OF_ID)
REFERENCES MATERIAL(ID) ON DELETE CASCADE

;
ALTER TABLE MATERIAL_MAT_SAMPLES
ADD CONSTRAINT FKEFB36D125C825889
FOREIGN KEY (MATERIAL_MNROAD_ID)
REFERENCES MAT_SAMPLES(ID) ON DELETE CASCADE
;


-- SELECT MNROAD_ID from MAT_SAMPLES GROUP BY MNROAD_ID HAVING COUNT(*) > 1
create unique index MNROAD_ID_UIDX on MAT_SAMPLES (MNROAD_ID) tablespace INDX;
ALTER TABLE MAT_SAMPLES
ADD CONSTRAINT FK1FED2C2A93981377
FOREIGN KEY (TAKEN_FROM_LAYER_ID)
REFERENCES LAYER(ID) ON DELETE CASCADE
--
--DROP SEQUENCE SENSOR_SEQ;
CREATE SEQUENCE SENSOR_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 CACHE 200;
--
DROP TABLE SENSOR_EVALUATION PURGE;
DROP TABLE SENSOR PURGE;
DROP TABLE SENSOR_MODEL PURGE;
--
CREATE TABLE SENSOR_MODEL
(
   MODEL 		VARCHAR2(3),
   DESCRIPTION 		VARCHAR2(200),
   COMMENTS 		VARCHAR2(2000),
   MEASUREMENT_TYPE 	VARCHAR2(40),
   DATA_VALUES_TABLE 	VARCHAR2(40),
   MODEL_NUM 		VARCHAR2(40),
   MEASUREMENT_UNITS 	VARCHAR2(20),
   MIN_POSSIBLE_VALUE NUMBER(15,5),
   MAX_POSSIBLE_VALUE NUMBER(15,5),
   MIN_EXPECTED_VALUE NUMBER(15,5),
   MAX_EXPECTED_VALUE NUMBER(15,5),
   ID 		NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION 		MUMBER(19) NOT NULL,
   CREATED_BY                   VARCHAR2(10),
   LAST_UPDATED_BY              VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--
CREATE TABLE SENSOR
(
 CELL                       NUMBER(3)    NOT NULL
 , MODEL                    VARCHAR2(3)  NOT NULL
 , SEQ                      NUMBER(3)    NOT NULL
 , DESCRIPTION              VARCHAR2(255)
 , DATE_INSTALLED           DATE
 , DATE_REMOVED             DATE
 , CABINET                  VARCHAR2(4)
 , STATION_FT               NUMBER(16,8)
 , OFFSET_FT                NUMBER(7, 2)
 , NORTHING_FT              NUMBER(10, 3)
 , EASTING_FT               NUMBER(10, 3)
 , PAVE_ELEV_FT             NUMBER(9, 3)
 , SENSOR_ELEV_FT           NUMBER(7, 3)
 , SENSOR_DEPTH_IN          NUMBER(9, 3)
 , ORIENTATION              VARCHAR2(13)
 , COLLECTION_TYPE          VARCHAR2(8)
 , DYNAMIC_STATIC           CHAR(1)
 , LAST_UPDATED             TIMESTAMP
 , DATE_CREATED             TIMESTAMP
 , COMMENTS                 VARCHAR2(255)
 , ID NUMBER(19)            PRIMARY KEY NOT NULL
 , VERSION                  NUMBER(19) NOT NULL
 , SENSOR_MODEL_ID          NUMBER(19) NOT NULL
 , SENSOR_ID                VARCHAR2(20) NOT NULL
 -- TO BE REMOVED
 -- LOCATION_MATERIAL replace as part of sensors set in layer  
 , LOCATION_MATERIAL        VARCHAR2(40)
 -- LOCATION_GROUP: Depth category, generate from SENSOR_DEPTH_IN
 , LOCATION_GROUP           NUMBER(2)
-- CURRENT_STATUS replace by most recent sensor_evaluation
  , CURRENT_STATUS           VARCHAR2(20)
-- LOCATION_LAYER replace as part of sensors set in layer  
 , LOCATION_LAYER           VARCHAR2(15)
 , LAYER_ID                 NUMBER(19)
 , CREATED_BY               VARCHAR2(10),
 , LAST_UPDATED_BY          VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE INDEX SENSOR_SEQ_BIDX ON SENSOR(SEQ) tablespace USERS;
CREATE INDEX SENSOR_MODEL_BIDX ON SENSOR(MODEL) tablespace USERS;
CREATE INDEX SENSOR_CELL_BIDX ON SENSOR(CELL) tablespace USERS;
ALTER TABLE SENSOR
ADD CONSTRAINT SENSOR_MODEL
FOREIGN KEY (SENSOR_MODEL_ID)
REFERENCES SENSOR_MODEL(ID);
--
CREATE TABLE SENSOR_EVALUATION       
(
 SENSOR_ID             NUMBER(19)    NOT NULL
 , DATE_COMMENT          DATE         NOT NULL
 , COMMENT_BY            VARCHAR2(50) NOT NULL
 , EVALUATION_METHOD     VARCHAR2(20)
 , RESULT                VARCHAR2(20) 
 , REASON                VARCHAR2(200)
 , LAST_UPDATED          TIMESTAMP 
 , DATE_CREATED          TIMESTAMP
 , ID                    NUMBER(19)    PRIMARY KEY  NOT NULL
 , VERSION               NUMBER(19)    NOT NULL
 , CREATED_BY            VARCHAR2(10)
 , LAST_UPDATED_BY       VARCHAR2(10)
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--
ALTER TABLE SENSOR_EVALUATION
ADD CONSTRAINT SENSOR_EVAL
FOREIGN KEY (SENSOR_ID)
REFERENCES SENSOR(ID);

CREATE TABLE JSEC_USER
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   PASSWORD_HASH varchar2(255) NOT NULL,
   USERNAME varchar2(255) NOT NULL
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE TABLE JSEC_ROLE
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   NAME varchar2(255) NOT NULL,
   IN_DIRECTORY NUMBER(1)
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE UNIQUE INDEX JSEC_ROLE_NAME ON JSEC_ROLE(NAME)
;
CREATE TABLE JSEC_PERMISSION
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   POSSIBLE_ACTIONS varchar2(255) NOT NULL,
   TYPE varchar2(255) NOT NULL
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE UNIQUE INDEX JSEC_PERM_TYPE ON JSEC_PERMISSION(TYPE)
;
CREATE TABLE JSEC_ROLE_PERMISSION_REL
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   ACTIONS varchar2(255) NOT NULL,
   PERMISSION_ID decimal(19) NOT NULL,
   ROLE_ID decimal(19) NOT NULL,
   TARGET varchar2(255) NOT NULL
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE JSEC_ROLE_PERMISSION_REL
ADD CONSTRAINT FK6DF5807AE3CC60D0
FOREIGN KEY (ROLE_ID)
REFERENCES JSEC_ROLE(ID) ON DELETE CASCADE
;
ALTER TABLE JSEC_ROLE_PERMISSION_REL
ADD CONSTRAINT FK6DF5807AEB28BDB0
FOREIGN KEY (PERMISSION_ID)
REFERENCES JSEC_PERMISSION(ID) ON DELETE CASCADE
;
CREATE TABLE JSEC_USER_PERMISSION_REL
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   ACTIONS varchar2(255) NOT NULL,
   PERMISSION_ID decimal(19) NOT NULL,
   TARGET varchar2(255),
   USER_ID decimal(19) NOT NULL
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE JSEC_USER_PERMISSION_REL
ADD CONSTRAINT FK28FF608588F724B0
FOREIGN KEY (USER_ID)
REFERENCES JSEC_USER(ID) ON DELETE CASCADE
;
ALTER TABLE JSEC_USER_PERMISSION_REL
ADD CONSTRAINT FK28FF6085EB28BDB0
FOREIGN KEY (PERMISSION_ID)
REFERENCES JSEC_PERMISSION(ID) ON DELETE CASCADE
;
CREATE TABLE JSEC_USER_ROLE_REL
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   ROLE_ID decimal(19) NOT NULL,
   USER_ID decimal(19) NOT NULL
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE JSEC_USER_ROLE_REL
ADD CONSTRAINT FK238F64ACE3CC60D0
FOREIGN KEY (ROLE_ID)
REFERENCES JSEC_ROLE(ID) ON DELETE CASCADE
;
ALTER TABLE JSEC_USER_ROLE_REL
ADD CONSTRAINT FK238F64AC88F724B0
FOREIGN KEY (USER_ID)
REFERENCES JSEC_USER(ID) ON DELETE CASCADE
;


SELECT 'CREATE SEQUENCE MNROAD_ID_SEQ MINVALUE 1 START WITH ' || MNROAD_ID_SEQ.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' MNROAD_ID,
       'CREATE SEQUENCE HIBERNATE_SEQ MINVALUE 1 START WITH ' || HIBERNATE_SEQUENCE.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' HIBERNATE,
       'CREATE SEQUENCE JSEC_ID_SEQ MINVALUE 1 START WITH ' || JSEC_ID_SEQ.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' JSEC_ID FROM DUAL;
DROP SEQUENCE MNROAD_ID_SEQ;
--CREATE SEQUENCE MNROAD_ID_SEQ MINVALUE 1 START WITH 13339 INCREMENT BY 1 CACHE 20;

DROP SEQUENCE VT_ID_SEQ;
CREATE SEQUENCE VT_ID_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 CACHE 200

DROP TABLE VEHICLE_LOCATION;
DROP TABLE VEHICLE_PASS;
DROP TABLE TRACKED_VEHICLE;

CREATE TABLE TRACKED_VEHICLE
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   DESCRIPTION varchar2(40) NOT NULL,
   -- GPS_MOUNT_ OFFSETS are relative to the center of the front axle
   GPS_MOUNT_LONGITUDINAL_OFFSET NUMBER(8,5),
   GPS_MOUNT_TRANSVERSE_OFFSET NUMBER(8,5),
   -- Axles are numbered from front to back beginning with 1
   -- Minimum 2, Maximum 20
   NUMBER_OF_AXLES NUMBER(2),
   -- TIRE_SPACING_WIDTH_NUMBER_LIST contains a comma separated list of axleSpacing_tireWidth_tireSpacing_numberOfAxleTires
   -- axleSpacing: distance (feet) from previous axle
   -- tireWidth:  width (inches) of tire surface contact
   -- tireSpacing: center to center distance (feet) between outside tires
   -- number: number of tires on the axle
   -- example: Two-Axle, Six-Tire, Single Unit Trucks
   -- front axle: 0.0_8.5_8.2_2,12.3_8.5_10.2_4
   TIRE_SPACING_WIDTH_NUMBER_LIST varchar2(400),
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL,
   CREATED_BY varchar2(10)
)
;
--drop table vehicle_location;
--drop TABLE VEHICLE_PASS;

CREATE TABLE VEHICLE_PASS
(
   SPEED decimal(6),
   GROSS_WEIGHT decimal(8),
   FACILITY_ID decimal(19),
   LANE_DESCRIPTION VARCHAR2(20) NOT NULL,
   TRACKED_VEHICLE_ID decimal(19) NOT NULL,
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL,
   CREATED_BY varchar2(10),
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19),
   DATE_COLLECTED timestamp
)
;
ALTER TABLE VEHICLE_PASS
ADD CONSTRAINT FK87022944FD088E5A
FOREIGN KEY (FACILITY_ID)
REFERENCES FACILITY(ID)
;
ALTER TABLE VEHICLE_PASS
ADD CONSTRAINT VEHICLE_PASS_TV
FOREIGN KEY (TRACKED_VEHICLE_ID)
REFERENCES TRACKED_VEHICLE(ID)
;

INSERT INTO TRACKED_VEHICLE  (ID, VERSION, DESCRIPTION, GPS_MOUNT_LONGITUDINAL_OFFSET
    , GPS_MOUNT_TRANSVERSE_OFFSET, NUMBER_OF_AXLES, TIRE_SPACING_WIDTH_NUMBER_LIST, DATE_CREATED, LAST_UPDATED, CREATED_BY)
    VALUES(VT_ID_SEQ.NEXTVAL,0,'MnROAD 80k truck', 3.3, 0.0, 5, 'N/A',sysdate,sysdate,'CARR1DEN');

INSERT INTO VEHICLE_PASS (SPEED,GROSS_WEIGHT,FACILITY_ID,LANE_DESCRIPTION,TRACKED_VEHICLE_ID,DATE_CREATED,LAST_UPDATED,CREATED_BY,ID,VERSION,DATE_COLLECTED) 
VALUES (40,80000,632,'Inside',1,{ts '2009-09-01 09:37:53.380'},{ts '2009-09-01 09:37:53.380'},'carr1den',VT_ID_SEQ.NEXTVAL,0,{ts '2009-09-01 00:00:00.000'});

CREATE TABLE VEHICLE_LOCATION
(
   OBS_DATETIME timestamp NOT NULL,
   LATITUDE DECIMAL(19,10) NOT NULL,
   LATITUDE_DIRECTION char(1) NOT NULL,
   LONGITUDE DECIMAL(19,10) NOT NULL,
   LONGITUDE_DIRECTION char(1) NOT NULL,
   VEHICLE_PASS_ID decimal(19) NOT NULL,
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL,
   CREATED_BY varchar2(10),
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19)
)
;
ALTER TABLE VEHICLE_LOCATION
ADD CONSTRAINT VEHICLE_LOCATION_VP
FOREIGN KEY (VEHICLE_PASS_ID)
REFERENCES VEHICLE_PASS(ID) ON DELETE CASCADE
;

CREATE TABLE DISTRESS
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CREATED_BY VARCHAR2(255) NOT NULL,
   LAST_UPDATED_BY VARCHAR2(255) NOT NULL,
   LAST_UPDATED TIMESTAMP NOT NULL,
   DATE_CREATED  TIMESTAMP NOT NULL,
   LANE_ID NUMBER(19) NOT NULL
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE;
--
ALTER TABLE DISTRESS
ADD CONSTRAINT DISTRESS_LANE_FK
FOREIGN KEY (LANE_ID)
REFERENCES LANE(ID) ON DELETE CASCADE
;

--DROP TABLE QUERY;
CREATE TABLE QUERY
(
   ID decimal(19) PRIMARY KEY NOT NULL,
   VERSION decimal(19) NOT NULL,
   COLUMNS_CLAUSE varchar2(255) NOT NULL,
   FROM_CLAUSE varchar2(255) NOT NULL,
   WHERE_CLAUSE varchar2(255) NOT NULL,
   ORDER_BY_CLAUSE varchar2(255) NOT NULL,
   PICTURE blob,
   LAST_UPDATED timestamp NOT NULL,
   DATE_CREATED timestamp NOT NULL
)
TABLESPACE USERS NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;

CREATE TABLE LANES
(
   LANE NUMBER(2) NOT NULL,
   ROADWAY varchar2(15) NOT NULL,
   LANE_DESC varchar2(80),
   LEFT_EDGE_OFFSET NUMBER(7,2) NOT NULL,
   RIGHT_EDGE_OFFSET NUMBER(7,2) NOT NULL,
   SLOPE NUMBER(4,3) NOT NULL
)
;
CREATE UNIQUE INDEX LANES_IDX ON LANES
(
  LANE,
  ROADWAY
)
;


INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (-1,'LVR East Loop','Inside left shoulder of East Loop in the Low Volume Roadway',20,12,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (-1,'LVR West Loop','Outside left shoulder of low volume road',24,12,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (-1,'Mainline','Mainline left shoulder',22,12,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (-1,'NOLVR','North Low Volume Roadway left shoulder',24,12,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (-1,'SOLVR','South Low Volume road left shoulder',20,12,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (0,'LVR East Loop','Outside right shoulder of West Loop in the Low Volume Roadway',12,24,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (0,'LVR West Loop','Inside right shoulder of West Loop in Low Volume Roadway',12,20,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (0,'Mainline','Mainline roadway right shoulder',12,16,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (0,'NOLVR','North Low Volume Road right shoulder',12,20,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (0,'SOLVR','South Low Volume Road right shoulder',12,24,0.04);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (1,'East loop','Left, inside lane of the Low Volume Roadway Eastloop',12,0,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (1,'Mainline','Mainline roadway driving lane',12,0,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (1,'NOLVR','North Low Volume Road driving lane',12,0,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (1,'SOLVR','South Low Volume Road driving lane',12,0,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (1,'West loop','Left, outside lane of the West loop',12,0,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (2,'East loop','Right, outside lane of the Low Volume Roadway East loop',0,12,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (2,'Mainline','Mainline roadway passing lane',0,12,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (2,'NOLVR','North Low Volume Road passing lane',0,12,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (2,'SOLVR','South Low Volume Road passing lane',0,12,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (2,'West loop','Right, inside lane of the Low Volume Roadway West loop',0,12,0.015);
INSERT INTO LANES (LANE,ROADWAY,LANE_DESC,LEFT_EDGE_OFFSET,RIGHT_EDGE_OFFSET,SLOPE) VALUES (3,'Mainline','Mainline roadway extra lane (no right shoulder)',12,26,0.02);

TRUNCATE TABLE SENSOR;
TRUNCATE TABLE MATERIAL_SAMPLE;
TRUNCATE TABLE MATERIAL;
TRUNCATE TABLE LAYER;
TRUNCATE TABLE LANE;
TRUNCATE TABLE CELL;
TRUNCATE TABLE ROAD_SECTION;
TRUNCATE TABLE FACILITY;
INSERT INTO SENSOR
(SELECT
SL_SEQ.NEXTVAL AS ID
, 0 VERSION
, CELL
, MODEL
, SEQ
, CONSTRUCTION_NUMBER
, CURRENT_STATUS
, CABINET
, STATION_FT
, OFFSET_FT
, DATA_COLLECTION_POINT
, NORTHING_FT
, EASTING_FT
, PAVE_ELEV_FT
, SENSOR_ELEV_FT
, DEPTH_FT
, DEPTH_END_FT
, CHAIR_POSITION
, ROADWAY_ORIENTATION
, ON_OFF_LINE
, DYNAMIC_STATIC
, ROADWAY_LOCATION
, LOCATION_MATERIAL
, LOCATION_LAYER
, LOCATION_GROUP
, COMMENTS
, DEPTH_MM
, OFFSET_MM
, DATE_UPDATED
, DEPTH_IN
, U_ID
, SYSDATE DATE_CREATED
FROM SENSOR_LOCATIONS)
;
DROP SEQUENCE SL_SEQ;

DROP TABLE MATERIAL_MAT_SAMPLES purge;
CREATE TABLE MATERIAL_MAT_SAMPLES
(
   MATERIAL_CONSTITUENT_OF_ID decimal(19),
   MATERIAL_MNROAD_ID decimal(19)
)
TABLESPACE USER NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE MATERIAL_MAT_SAMPLES
ADD CONSTRAINT FKEFB36D12262CCDD7
FOREIGN KEY (MATERIAL_CONSTITUENT_OF_ID)
REFERENCES MATERIAL(ID) ON DELETE CASCADE

;
ALTER TABLE MATERIAL_MAT_SAMPLES
ADD CONSTRAINT FKEFB36D125C825889
FOREIGN KEY (MATERIAL_MNROAD_ID)
REFERENCES MAT_SAMPLES(ID) ON DELETE CASCADE
;


SELECT c.dowel_diameter, l.id, c.class, c.cell_number, c.name, l.LAYER_NUM, l.MATERIAL_ID, m.DESCRIPTION FROM cell c join lane ln on ln.cell_id = c.id join layer l on l.lane_id = ln.id join material m on l.material_id = m.id
where dowel_diameter is not null and doweled=1 and m.basic_material = 'Concrete'
order by l.id

SELECT distinct c.dowel_diameter FROM cell c join lane ln on ln.cell_id = c.id join layer l on l.lane_id = ln.id join material m on l.material_id = m.id  where dowel_diameter is not null and doweled=1 and m.basic_material = 'Concrete' and c.cell_number=5

select 'update layer set dowel_bar_diameter = ' || c.dowel_diameter || ' where id = ' || l.id ||';'
FROM cell c join lane ln on ln.cell_id = c.id join layer l on l.lane_id = ln.id join material m on l.material_id = m.id
where dowel_diameter is not null and doweled=1 and m.basic_material = 'Concrete'
order by l.id

CREATE TABLE DYNAMIC_LOAD_TEST_VALUES
(
   DLTV_ID decimal(22) PRIMARY KEY NOT NULL,
   CELL decimal(4) NOT NULL,
   MODEL varchar2(3) NOT NULL,
   SEQ decimal(3) NOT NULL,
   TEST_DATE timestamp NOT NULL,
   HOUR decimal(2) NOT NULL,
   MINUTE decimal(2) NOT NULL,
   SECOND decimal(2) NOT NULL,
   ELAPSED_TIME decimal(22) NOT NULL,
   TESTNAME varchar2(7),
   DATA_SET decimal(3),
   MILLISECOND decimal(3),
   VALUE_SOURCE varchar2(30),
   VALUE_TYPE varchar2(20),
   VALUE_ID decimal(2) NOT NULL,
   VALUE decimal(22) NOT NULL,
   INITIAL_BASELINE decimal(22),
   PEAK_OR_TROUGH varchar2(3),
   SNR_RATIO decimal(22),
   DB_LOAD_DATE timestamp,
   HAS_GT5_AXLES_IN_TEST varchar2(1),
   CREATED_BY varchar2(8),
   CREATED_DATE timestamp,
   MODIFIED_BY varchar2(8),
   MODIFIED_DATE timestamp,
   INTERMEDIATE_BASELINE decimal(22),
   FINAL_BASELINE decimal(22)
)
;
CREATE INDEX DLTV_SEQ_BIDX ON DYNAMIC_LOAD_TEST_VALUES(SEQ)
;
CREATE UNIQUE INDEX BIN$ii0K+eXARDiUMecu2++2WA==$0 ON DYNAMIC_LOAD_TEST_VALUES(DLTV_ID)
;
CREATE INDEX DLTV_SECOND_BIDX ON DYNAMIC_LOAD_TEST_VALUES(SECOND)
;
CREATE INDEX DLTV_TDATE_BIDX ON DYNAMIC_LOAD_TEST_VALUES(TEST_DATE)
;
CREATE INDEX DLTV_MINUTE_BIDX ON DYNAMIC_LOAD_TEST_VALUES(MINUTE)
;
CREATE INDEX DLTV_MODEL_BIDX ON DYNAMIC_LOAD_TEST_VALUES(MODEL)
;
CREATE INDEX DLTV_HOUR_BIDX ON DYNAMIC_LOAD_TEST_VALUES(HOUR)
;
CREATE INDEX DLTV_CELL_BIDX ON DYNAMIC_LOAD_TEST_VALUES(CELL)
;
SELECT 'CREATE SEQUENCE DYNAMIC_LOAD_TEST_VALUES_SEQ MINVALUE 1 START WITH ' || (select max(dltv_id)+1 from DYNAMIC_LOAD_TEST_VALUES) || ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
CREATE SEQUENCE DYNAMIC_LOAD_TEST_VALUES_SEQ MINVALUE 1 START WITH 6657256 INCREMENT BY 1 CACHE 20;
CREATE TABLE DYNAMIC_LOAD_TEST_DESCRIPTIONS
(
   CELL decimal(3) NOT NULL,
   TCS_TESTNAME varchar2(20) NOT NULL,
   TCS_DATASET varchar2(12),
   TEST_DATE timestamp NOT NULL,
   HOUR decimal(2) NOT NULL,
   MINUTE decimal(2) NOT NULL,
   SECOND decimal(2),
   TRUCK_FWD_IND char(1),
   IR_TEMP decimal(22),
   TIRE_OFFSET_IN decimal(6),
   LANE varchar2(8) NOT NULL,
   VEHICLE_SPEED decimal(3),
   WANDER char(1),
   DATE_CREATED timestamp NOT NULL,
   DATE_MODIFIED timestamp,
   CREATED_BY_USER varchar2(8) NOT NULL,
   MODIFIED_BY_USER varchar2(8)
)
;
SELECT
D.CELL
, D.TCS_TESTNAME
, D.TCS_DATASET
, D.TEST_DATE
, D.HOUR
, D.MINUTE
, D.SECOND
, D.TRUCK_FWD_IND
, D.IR_TEMP
, D.TIRE_OFFSET_IN
, D.LANE
, D.VEHICLE_SPEED
, D.WANDER
, V.CELL
, V.MODEL
, V.SEQ
, V.TEST_DATE
, V.HOUR
, V.MINUTE
, V.SECOND
, V.ELAPSED_TIME
, V.TESTNAME
, V.DATA_SET
, V.MILLISECOND
, V.VALUE_SOURCE
, V.VALUE_TYPE
, V.VALUE_ID
, V.VALUE
, V.INITIAL_BASELINE
, V.PEAK_OR_TROUGH
, V.SNR_RATIO
, V.DB_LOAD_DATE
, V.HAS_GT5_AXLES_IN_TEST
, V.INTERMEDIATE_BASELINE
, V.FINAL_BASELINE
 FROM DYNAMIC_LOAD_TEST_DESCRIPTIONS D JOIN DYNAMIC_LOAD_TEST_VALUES V  ON
    V.CELL=D.CELL AND V.TESTNAME=D.TCS_TESTNAME AND TO_CHAR(V.DATA_SET)=D.TCS_DATASET
    AND V.TEST_DATE=D.TEST_DATE AND V.HOUR=D.HOUR AND V.MINUTE=D.MINUTE AND V.SECOND=D.SECOND
WHERE V.CELL IN (26,27,28,29)
ORDER BY
V.CELL
, V.MODEL
, V.SEQ
, V.TEST_DATE
, V.HOUR
, V.MINUTE
, V.SECOND
, V.ELAPSED_TIME
, V.TESTNAME
, V.DATA_SET;

// for adding userIds the db table rows
alter table sensor add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table sensor_evaluation add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table road_section add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table material add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table mat_samples add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table lane add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table facility add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table cell add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table layer add (created_By varchar2(11), last_Updated_By varchar2(11));
alter table app_config add (created_By varchar2(11), last_Updated_By varchar2(11));
delete from app_config;
alter table app_config add (date_created timestamp not null, last_updated timestamp not null );
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (1,1,'Material','basicMaterial','dev','Aggregate,Asphalt,Clay,Concrete,Geocomposite,Geotextile,Gravel,Other,Porous Asphalt,Pervious Concrete,Reclaimed,Recycled,Sand,Stone',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (2,2,'Material','binder','dev','PG 52-34,PG 58-28,PG 58-34,PG 58-40,PG 64-22,PG 64-28,PG 64-34,PG 70-28,CRS-2P',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (3,1,'Material','designLevel','dev','SuperPave Level 2,SuperPave Level 3,SuperPave Level 4,SuperPave Level 5,SuperPave Level 6,Marshall 35 Blow,Marshall 50 Blow,Marshall 75 Blow,Gyratory',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (4,0,'Material','course','dev','Wear,Non-wear',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (5,0,'Lane','name','dev','Left Shldr,Right Shldr,Driving,Passing 1,Passing 2,Passing 3,Passing 4,Passing 5',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (6,1,'Cell','shoulderType','dev','Curb and Gutter,Gravel,HMA,PCC, Sidewalk',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (7,0,'RoadSection','orientation','dev','East,North,None',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (8,1,'Material','fiberType','dev','Polypropylene, Polyolefin, Cellulose',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (9,2,'Cell','drainageSystem','dev','Edge Drains,French,GCBD,None,Open air outlet to driveway,Open Graded Base,PASB with Drains,Porous Pavement System,Slotted PVC pipe in center of road,Wick Drains',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (10,6,'Material','gradationName','dev','Class 1 MnROAD Base and Surface - Coarse,Class 1 MnROAD Base and Surface - Fine,Class 1 Spec 3149 Stabilizing Aggregate,Class 2 Shouldering Aggregate,Class 3 MnROAD - Base Special,Class 3 Shouldering Aggregate,Class 4 MnROAD - Base Special,Class 5 MnROAD - Base Special,Class 5 Shouldering Aggregate,Class 6 MnROAD - Base Special,Removal',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (11,2,'Cell','surfaceTexture','dev','Astro Turf,Heavy Turf,Long Broom,Long Tine+Trad Grind,Pervious,Porous,Transverse Broom,Transverse Tine',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (12,0,'us.mn.state.dot.mnroad.AppConfig','name','dev','us.mn.state.dot.mnroad.AppConfig, Cell, Facility, Lane, Layer, Material, MaterialSample,RoadSection, Sensor, SensorEvaluation, SensorModel, TransverseJoint',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (13,0,'SensorEvaluation','evaluationMethod','dev','80k truck, FWD, manual, visual, data review',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (31,0,'TransverseJoint','sealantType','dev','None,Silicone,Hot Pour Asphalt',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (32,0,'Cell','longitudinalJointSeal','dev','Hot Pour Asphalt',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (51,0,'TransverseJoint','dowelBarType','dev','Epoxy Coated Steel, Hollow Stainless, Fiber Reinforced Polymer,Flat Steel',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (52,0,'SensorEvaluation','result','dev','Reliable,Questionable,Dead',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (53,0,'Sensor','collectionType','dev','Online,Offline',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (54,0,'Sensor','dynamicStatic','dev','D,S',null,null,sysdate,sysdate);
INSERT INTO APP_CONFIG (ID,VERSION,NAME,PARAMETER,STATUS,VAL,CREATED_BY,LAST_UPDATED_BY, DATE_CREATED, LAST_UPDATED) VALUES (55,0,'Sensor','orientation','dev','45 Degrees,Angled,Horizontal,Longitudinal,Normal,Transverse,Vertical',null,null,sysdate,sysdate);

alter table sensor drop column COLLECTION_TYPE;
alter table sensor drop column DYNAMIC_STATIC;
alter table sensor drop column COMMENTS;
alter table sensor drop column CURRENT_STATUS;

alter table sensor_counts rename to sensor_counts_prod;

DROP TABLE SENSOR_COUNTS;
CREATE TABLE SENSOR_COUNTS
(
   TABLE_NAME varchar2(13),
   CELL NUMBER(22),
   SEQ NUMBER(22),
   FROM_DAY DATE,
   TO_DAY DATE,
   NUM_READINGS NUMBER(22),
   AS_OF timestamp
)
;

--DROP TABLE PCC_PANEL PURGE;
CREATE TABLE PCC_PANEL
(
   PANEL_LENGTH NUMBER(7,3),
   PANEL_WIDTH NUMBER(7,3),
   PANEL_NUMBER NUMBER(2),
   LAYER_ID NUMBER(19) NOT NULL,
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CREATED_BY varchar2(255) NOT NULL,
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp,
   LAST_UPDATED_BY varchar2(255)
)
;
ALTER TABLE PCC_PANEL
ADD CONSTRAINT PCC_PANEL_LAYER
FOREIGN KEY (LAYER_ID)
REFERENCES LAYER(LAYER_ID);
;











