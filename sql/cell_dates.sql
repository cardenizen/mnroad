SELECT
L.DCP_ID
,L.PROJECT_DESC
,L.CELL
,L.STATION
,L.OFFSET_FT
,L.DAY
,L.LAYER
,L.COMMENTS
,L.MOISTURE_PERCENT
,L.DENSITY_PCF
,L.DEPTH_BELOW_GRADE_IN
,V.BLOW_COUNT
,V.PROBE_DEPTH_IN
 FROM MNR.DCP_LOCATION L JOIN MNR.DCP_VALUES V ON V.DCP_ID=L.DCP_ID
ORDER BY CELL,STATION,OFFSET_FT

SELECT UNIQUE D.CELL C_CELL, C.CELL, C.FROM_DATE-D.DAY CONSTRUCTION_DURATION, C.FROM_DATE, D.DAY C_DATE
FROM MNR.DCP_LOCATION D LEFT OUTER JOIN MNR.CELLS C ON D.CELL=C.CELL
WHERE D.DAY < C.FROM_DATE AND (C.FROM_DATE < '01-JAN-1994' OR C.FROM_DATE-D.DAY < 1000)
ORDER BY C.CELL,D.DAY

SELECT UNIQUE CELL, DAY FROM MNR.DCP_LOCATION
MINUS
SELECT UNIQUE D.CELL, DAY FROM MNR.DCP_LOCATION D JOIN MNR.CELLS C ON D.CELL=C.CELL


SELECT UNIQUE TO_NUMBER(D.SECTION_NAME) C_CELL, C.CELL, C.FROM_DATE-TO_DATE(TO_CHAR(D.SESSION_DATE,'MM-DD-YYYY'),'MM-DD-YYYY') CONSTRUCTION_DURATION, C.FROM_DATE, D.SESSION_DATE C_DATE
FROM MNR.FWD_SESSION D LEFT OUTER JOIN MNR.CELLS C ON D.SECTION_NAME=TO_CHAR(C.CELL)
WHERE TO_DATE(TO_CHAR(D.SESSION_DATE,'MM-DD-YYYY'),'MM-DD-YYYY') < C.FROM_DATE AND (C.FROM_DATE < '01-JAN-1994' OR C.FROM_DATE-TO_DATE(TO_CHAR(D.SESSION_DATE,'MM-DD-YYYY'),'MM-DD-YYYY') < 1000)
ORDER BY C.CELL,D.SESSION_DATE

SELECT CELL,FROM_DATE, MIN(C_DATE) BEGIN_CONSTRUCTION_DATE, FROM_DATE-MIN(C_DATE) DURATION, COUNT(*) FROM (
SELECT UNIQUE TO_NUMBER(D.SECTION_NAME) C_CELL, C.CELL, C.FROM_DATE-TO_DATE(TO_CHAR(D.SESSION_DATE,'MM-DD-YYYY'),'MM-DD-YYYY') CONSTRUCTION_DURATION, C.FROM_DATE, TO_DATE(TO_CHAR(D.SESSION_DATE,'MM-DD-YYYY'),'MM-DD-YYYY') C_DATE
FROM MNR.FWD_SESSION D LEFT OUTER JOIN MNR.CELLS C ON D.SECTION_NAME=TO_CHAR(C.CELL)
WHERE TO_DATE(TO_CHAR(D.SESSION_DATE,'MM-DD-YYYY'),'MM-DD-YYYY') < C.FROM_DATE AND (C.FROM_DATE < '01-JAN-1994' OR C.FROM_DATE-TO_DATE(TO_CHAR(D.SESSION_DATE,'MM-DD-YYYY'),'MM-DD-YYYY') < 1000)
UNION ALL
SELECT UNIQUE D.CELL C_CELL, C.CELL, C.FROM_DATE-D.DAY CONSTRUCTION_DURATION, C.FROM_DATE, D.DAY C_DATE
FROM MNR.DCP_LOCATION D LEFT OUTER JOIN MNR.CELLS C ON D.CELL=C.CELL
WHERE D.DAY < C.FROM_DATE AND (C.FROM_DATE < '01-JAN-1994' OR C.FROM_DATE-D.DAY < 1000)
) 
GROUP BY CELL,FROM_DATE
ORDER BY CELL,FROM_DATE


SELECT C.CELL_NUMBER 
, MIN(L.CONSTRUCT_START_DATE) FROM_DATE
,C.ID
FROM MNR.CELL C 
JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
JOIN MNR.LAYER L ON L.LANE_ID=LN.ID
GROUP BY C.ID, C.CELL_NUMBER
ORDER BY C.CELL_NUMBER,ID


ORDER BY C.CELL,D.SESSION_DATE

--CELLS
SELECT
CELL, ID, FROM_DATE, TO_DATE, TYPE
FROM CELL_DATES
union
all
SELECT
UNIQUE CELL_UNDER,
ID_UNDER,
CELL_UNDER_FROM_DATE FROM_DATE,
FROM_DATE TO_DATE,
TYPE_UNDER TYPE
FROM CELL_DATES
WHERE CELL_UNDER IS NOT NULL


SELECT CA.ID
,CA.CELL
,CA.TYPE
,CASE
WHEN CA.FROM_DATE < CB.FROM_DATE THEN CA.FROM_DATE
ELSE CB.FROM_DATE
END FROM_DATE
, CA.TO_DATE
, CASE
WHEN CA.FROM_DATE < CB.FROM_DATE THEN 'CELLS'
ELSE 'LAYER.CONSTRUCT_START_DATE'
END SOURCE
, CA.FROM_DATE CA_FROM_DATE
, CB.FROM_DATE CB_FROM_DATE
FROM
(
SELECT ID, CELL, FROM_DATE, TYPE, TO_DATE FROM MNR.CELLS CS
) CA
JOIN
(SELECT C.ID
, C.CELL_NUMBER CELL
, MIN(L.CONSTRUCT_START_DATE) FROM_DATE
, NULL TYPE
, MAX(C.DEMOLISHED_DATE) TO_DATE
, NULL SOURCE
, C.CONSTRUCTION_ENDED_DATE C_CONSTRUCTION_ENDED_DATE
, MIN(L.CONSTRUCT_START_DATE) L_CONSTRUCT_START_DATE
FROM MNR.CELL C
JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
JOIN MNR.LAYER L ON L.LANE_ID=LN.ID
GROUP BY C.ID, C.CELL_NUMBER,C.CONSTRUCTION_ENDED_DATE) CB
ON CA.ID=CB.ID

WHERE CA.TYPE='HmaCell'
ORDER BY CELL,ID

--CELL_DATES
SELECT
UNIQUE ID,
TYPE,
FROM_STATION,
TO_STATION,
CELL,
FROM_DATE,
TO_DATE,
ID_UNDER,
TYPE_UNDER,
CELL_UNDER,
CELL_UNDER_FROM_DATE,
CELL_UNDER_TO_DATE
FROM
(
   SELECT
   C.ID ID,
   SUBSTR(C.CLASS,24) TYPE,
   CASE WHEN (C.START_STATION) > (SELECT START_STATION FROM CELL WHERE ID=CC.CELL_ID) THEN (C.START_STATION) ELSE (SELECT START_STATION FROM CELL WHERE ID=CC.CELL_ID) END FROM_STATION,
   CASE WHEN (C.END_STATION) < (SELECT END_STATION FROM CELL WHERE ID=CC.CELL_ID) THEN (C.END_STATION) ELSE (SELECT END_STATION FROM CELL WHERE ID=CC.CELL_ID) END TO_STATION,
   C.CELL_NUMBER CELL,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   C.DEMOLISHED_DATE TO_DATE,
   CC.CELL_ID ID_UNDER,
   (SELECT SUBSTR(CLASS,24) FROM CELL WHERE ID=CC.CELL_ID) TYPE_UNDER,
   (SELECT CELL_NUMBER FROM CELL WHERE ID=CC.CELL_ID) CELL_UNDER,
   (SELECT CONSTRUCTION_ENDED_DATE FROM CELL WHERE ID=CC.CELL_ID) CELL_UNDER_FROM_DATE,
   (SELECT DEMOLISHED_DATE FROM CELL WHERE ID=CC.CELL_ID) CELL_UNDER_TO_DATE
   FROM MNR.CELL C JOIN MNR.CELL_CELL CC ON CC.CELL_COVERS_ID = C.ID
   UNION
   ALL
   SELECT
   CC.CELL_ID ID,
   (SELECT SUBSTR(CLASS,24) FROM CELL WHERE ID=CC.CELL_ID) TYPE,
   CASE WHEN (C.START_STATION) > (SELECT START_STATION FROM CELL WHERE ID=CC.CELL_ID) THEN (C.START_STATION) ELSE (SELECT START_STATION FROM CELL WHERE ID=CC.CELL_ID) END FROM_STATION,
   CASE WHEN (C.END_STATION) < (SELECT END_STATION FROM CELL WHERE ID=CC.CELL_ID) THEN (C.END_STATION) ELSE (SELECT END_STATION FROM CELL WHERE ID=CC.CELL_ID) END TO_STATION,
   (SELECT CELL_NUMBER FROM CELL WHERE ID=CC.CELL_ID) CELL,
   (SELECT CONSTRUCTION_ENDED_DATE FROM CELL WHERE ID=CC.CELL_ID) FROM_DATE,
   (SELECT DEMOLISHED_DATE FROM CELL WHERE ID=CC.CELL_ID) TO_DATE,
   C.ID ID_UNDER,
   SUBSTR(C.CLASS,24) TYPE_UNDER,
   C.CELL_NUMBER CELL_UNDER,
   CONSTRUCTION_ENDED_DATE CELL_UNDER_FROM_DATE,
   C.DEMOLISHED_DATE CELL_UNDER_TO_DATE
   FROM MNR.CELL C JOIN MNR.CELL_CELL CC ON CC.CELL_COVERED_BY_ID = C.ID
   UNION
   ALL
   SELECT
   C.ID,
   SUBSTR(C.CLASS,24) TYPE,
   START_STATION FROM_STATION,
   END_STATION TO_STATION,
   CELL_NUMBER,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   DEMOLISHED_DATE TO_DATE,
   null ID_UNDER,
   null TYPE_UNDER,
   null CELL_UNDER,
   null CELL_UNDER_FROM_DATE,
   null CELL_UNDER_TO_DATE
   FROM MNR.CELL C
   WHERE DEMOLISHED_DATE IS NOT NULL
   UNION
   ALL
   SELECT
   C.ID,
   SUBSTR(C.CLASS,24) TYPE,
   START_STATION FROM_STATION,
   END_STATION TO_STATION,
   CELL_NUMBER,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   DEMOLISHED_DATE TO_DATE,
   null ID_UNDER,
   null TYPE_UNDER,
   null CELL_UNDER,
   null CELL_UNDER_FROM_DATE,
   null CELL_UNDER_TO_DATE
   FROM MNR.CELL C
   WHERE DEMOLISHED_DATE IS NULL
   AND ID NOT IN (SELECT CELL_ID FROM CELL_CELL)
)


--CELLS
SELECT
CELL, ID, FROM_DATE, TO_DATE, TYPE
FROM
--MNR.CELL_DATES
(
SELECT
UNIQUE ID,
TYPE,
FROM_STATION,
TO_STATION,
CELL,
FROM_DATE,
TO_DATE,
ID_UNDER,
TYPE_UNDER,
CELL_UNDER,
CELL_UNDER_FROM_DATE,
CELL_UNDER_TO_DATE
FROM
(
   SELECT
   C.ID ID,
   SUBSTR(C.CLASS,24) TYPE,
   CASE WHEN (C.START_STATION) > (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.START_STATION) ELSE (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END FROM_STATION,
   CASE WHEN (C.END_STATION) < (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.END_STATION) ELSE (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END TO_STATION,
   C.CELL_NUMBER CELL,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   C.DEMOLISHED_DATE TO_DATE,
   CC.CELL_ID ID_UNDER,
   (SELECT SUBSTR(CLASS,24) FROM MNR.CELL WHERE ID=CC.CELL_ID) TYPE_UNDER,
   (SELECT CELL_NUMBER FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL_UNDER,
   (SELECT CONSTRUCTION_ENDED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL_UNDER_FROM_DATE,
   (SELECT DEMOLISHED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL_UNDER_TO_DATE
   FROM MNR.CELL C JOIN MNR.CELL_CELL CC ON CC.CELL_COVERS_ID = C.ID
   UNION
   ALL
   SELECT
   CC.CELL_ID ID,
   (SELECT SUBSTR(CLASS,24) FROM MNR.CELL WHERE ID=CC.CELL_ID) TYPE,
   CASE WHEN (C.START_STATION) > (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.START_STATION) ELSE (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END FROM_STATION,
   CASE WHEN (C.END_STATION) < (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.END_STATION) ELSE (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END TO_STATION,
   (SELECT CELL_NUMBER FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL,
   (SELECT CONSTRUCTION_ENDED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) FROM_DATE,
   (SELECT DEMOLISHED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) TO_DATE,
   C.ID ID_UNDER,
   SUBSTR(C.CLASS,24) TYPE_UNDER,
   C.CELL_NUMBER CELL_UNDER,
   CONSTRUCTION_ENDED_DATE CELL_UNDER_FROM_DATE,
   C.DEMOLISHED_DATE CELL_UNDER_TO_DATE
   FROM MNR.CELL C JOIN MNR.CELL_CELL CC ON CC.CELL_COVERED_BY_ID = C.ID
   UNION
   ALL
   SELECT
   C.ID,
   SUBSTR(C.CLASS,24) TYPE,
   START_STATION FROM_STATION,
   END_STATION TO_STATION,
   CELL_NUMBER,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   DEMOLISHED_DATE TO_DATE,
   null ID_UNDER,
   null TYPE_UNDER,
   null CELL_UNDER,
   null CELL_UNDER_FROM_DATE,
   null CELL_UNDER_TO_DATE
   FROM MNR.CELL C
   WHERE DEMOLISHED_DATE IS NOT NULL
   UNION
   ALL
   SELECT
   C.ID,
   SUBSTR(C.CLASS,24) TYPE,
   START_STATION FROM_STATION,
   END_STATION TO_STATION,
   CELL_NUMBER,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   DEMOLISHED_DATE TO_DATE,
   null ID_UNDER,
   null TYPE_UNDER,
   null CELL_UNDER,
   null CELL_UNDER_FROM_DATE,
   null CELL_UNDER_TO_DATE
   FROM MNR.CELL C
   WHERE DEMOLISHED_DATE IS NULL
   AND ID NOT IN (SELECT CELL_ID FROM MNR.CELL_CELL)
)
)
union
all
SELECT
UNIQUE CELL_UNDER,
ID_UNDER,
CELL_UNDER_FROM_DATE FROM_DATE,
FROM_DATE TO_DATE,
TYPE_UNDER TYPE
FROM
--MNR.CELL_DATES
(
SELECT
UNIQUE ID,
TYPE,
FROM_STATION,
TO_STATION,
CELL,
FROM_DATE,
TO_DATE,
ID_UNDER,
TYPE_UNDER,
CELL_UNDER,
CELL_UNDER_FROM_DATE,
CELL_UNDER_TO_DATE
FROM
(
   SELECT
   C.ID ID,
   SUBSTR(C.CLASS,24) TYPE,
   CASE WHEN (C.START_STATION) > (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.START_STATION) ELSE (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END FROM_STATION,
   CASE WHEN (C.END_STATION) < (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.END_STATION) ELSE (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END TO_STATION,
   C.CELL_NUMBER CELL,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   C.DEMOLISHED_DATE TO_DATE,
   CC.CELL_ID ID_UNDER,
   (SELECT SUBSTR(CLASS,24) FROM MNR.CELL WHERE ID=CC.CELL_ID) TYPE_UNDER,
   (SELECT CELL_NUMBER FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL_UNDER,
   (SELECT CONSTRUCTION_ENDED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL_UNDER_FROM_DATE,
   (SELECT DEMOLISHED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL_UNDER_TO_DATE
   FROM MNR.CELL C JOIN MNR.CELL_CELL CC ON CC.CELL_COVERS_ID = C.ID
   UNION
   ALL
   SELECT
   CC.CELL_ID ID,
   (SELECT SUBSTR(CLASS,24) FROM MNR.CELL WHERE ID=CC.CELL_ID) TYPE,
   CASE WHEN (C.START_STATION) > (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.START_STATION) ELSE (SELECT START_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END FROM_STATION,
   CASE WHEN (C.END_STATION) < (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) THEN (C.END_STATION) ELSE (SELECT END_STATION FROM MNR.CELL WHERE ID=CC.CELL_ID) END TO_STATION,
   (SELECT CELL_NUMBER FROM MNR.CELL WHERE ID=CC.CELL_ID) CELL,
   (SELECT CONSTRUCTION_ENDED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) FROM_DATE,
   (SELECT DEMOLISHED_DATE FROM MNR.CELL WHERE ID=CC.CELL_ID) TO_DATE,
   C.ID ID_UNDER,
   SUBSTR(C.CLASS,24) TYPE_UNDER,
   C.CELL_NUMBER CELL_UNDER,
   CONSTRUCTION_ENDED_DATE CELL_UNDER_FROM_DATE,
   C.DEMOLISHED_DATE CELL_UNDER_TO_DATE
   FROM MNR.CELL C JOIN MNR.CELL_CELL CC ON CC.CELL_COVERED_BY_ID = C.ID
   UNION
   ALL
   SELECT
   C.ID,
   SUBSTR(C.CLASS,24) TYPE,
   START_STATION FROM_STATION,
   END_STATION TO_STATION,
   CELL_NUMBER,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   DEMOLISHED_DATE TO_DATE,
   null ID_UNDER,
   null TYPE_UNDER,
   null CELL_UNDER,
   null CELL_UNDER_FROM_DATE,
   null CELL_UNDER_TO_DATE
   FROM MNR.CELL C
   WHERE DEMOLISHED_DATE IS NOT NULL
   UNION
   ALL
   SELECT
   C.ID,
   SUBSTR(C.CLASS,24) TYPE,
   START_STATION FROM_STATION,
   END_STATION TO_STATION,
   CELL_NUMBER,
   CONSTRUCTION_ENDED_DATE FROM_DATE,
   DEMOLISHED_DATE TO_DATE,
   null ID_UNDER,
   null TYPE_UNDER,
   null CELL_UNDER,
   null CELL_UNDER_FROM_DATE,
   null CELL_UNDER_TO_DATE
   FROM MNR.CELL C
   WHERE DEMOLISHED_DATE IS NULL
   AND ID NOT IN (SELECT CELL_ID FROM MNR.CELL_CELL)
)
)
WHERE CELL_UNDER IS NOT NULL

SELECT
CS.CELL
, CS.ID
, CS. FROM_DATE
, (SELECT MIN(L1.CONSTRUCT_START_DATE) FROM_DATE
  FROM MNR.CELL C1 JOIN MNR.LANE LN1 ON LN1.CELL_ID=C1.ID JOIN MNR.LAYER L1 ON L1.LANE_ID=LN1.ID
  WHERE C1.ID=CS.ID) MIN_LAYER_DATE
, CS.TO_DATE
, CS.TYPE
FROM
MNR.CELLS CS
ORDER BY CELL,ID


SELECT
CS.CELL_NUMBER CELL
, CS.ID
, (SELECT TO_CHAR(MIN(L1.CONSTRUCT_START_DATE),'dd-MON-yyyy')
  FROM MNR.CELL C1 JOIN MNR.LANE LN1 ON LN1.CELL_ID=C1.ID JOIN MNR.LAYER L1 ON L1.LANE_ID=LN1.ID
  WHERE C1.ID=CS.ID 
  ) MIN_LAYER_DATE
, (SELECT TO_CHAR(MAX(L1.CONSTRUCT_END_DATE),'dd-MON-yyyy')
  FROM MNR.CELL C1 JOIN MNR.LANE LN1 ON LN1.CELL_ID=C1.ID JOIN MNR.LAYER L1 ON L1.LANE_ID=LN1.ID 
  WHERE C1.ID=CS.ID 
  ) MAX_LAYER_DATE
, TO_CHAR(CS.CONSTRUCTION_ENDED_DATE,'dd-MON-yyyy') END_CONSTRUCTION
FROM MNR.CELL CS
ORDER BY CELL,ID

SELECT * FROM (
SELECT ID
, CELL_NUMBER CELL
, TO_CHAR(CONSTRUCTION_ENDED_DATE,'dd-MON-yyyy') END_CONSTRUCTION
, TO_CHAR(DEMOLISHED_DATE,'dd-MON-yyyy') DATE_DEMOLISHED
, (SELECT TO_CHAR(MIN(L1.CONSTRUCT_START_DATE),'dd-MON-yyyy')
  FROM MNR.CELL C1 JOIN MNR.LANE LN1 ON LN1.CELL_ID=C1.ID JOIN MNR.LAYER L1 ON L1.LANE_ID=LN1.ID
  WHERE C1.ID=C.ID 
  ) MIN_LAYER_DATE
, (SELECT TO_CHAR(MAX(L1.CONSTRUCT_END_DATE),'dd-MON-yyyy')
  FROM MNR.CELL C1 JOIN MNR.LANE LN1 ON LN1.CELL_ID=C1.ID JOIN MNR.LAYER L1 ON L1.LANE_ID=LN1.ID 
  WHERE C1.ID=C.ID 
  ) MAX_LAYER_DATE
, 
TO_CHAR(LAG(DEMOLISHED_DATE,1,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY CELL_NUMBER,CONSTRUCTION_ENDED_DATE),'dd-MON-yyyy') PREV_CELL_DEMO_DATE
, NAME 
FROM MNR.CELL C
)
WHERE PREV_CELL_DEMO_DATE IS NOT NULL AND MIN_LAYER_DATE < PREV_CELL_DEMO_DATE
ORDER BY CELL,ID

SELECT * FROM (
SELECT 
CD.ID
,CD.CELL
,CONSTRUCTION_BEGAN_DATE CONSTRUCTION_BEGAN
,CONSTRUCTION_ENDED_DATE CONSTRUCTION_ENDED
,CELL_END_DATE CELL_ENDED
,LEAD (CONSTRUCTION_BEGAN_DATE,1,NULL) OVER (PARTITION BY CELL ORDER BY CD.ID) NEXT_CONSTRUCTION_BEGAN
,LEAD (ID,1,NULL) OVER (PARTITION BY CELL ORDER BY CD.ID) NEXT_CELL_ID
,LEAD (CELL,1,NULL) OVER (PARTITION BY CELL ORDER BY CD.ID) NEXT_CELL
,LEAD (DESIGN,1,NULL) OVER (PARTITION BY CELL ORDER BY CD.ID) NEXT_DESIGN
FROM MNR.CELL_DESIGN CD 
) WHERE NEXT_CONSTRUCTION_BEGAN IS NOT NULL AND NEXT_CONSTRUCTION_BEGAN < CELL_ENDED

