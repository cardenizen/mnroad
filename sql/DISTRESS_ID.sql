SELECT 
D.ID,D.CELL,CELLS.ID CELL_ID,D.LANE,LN.ID LANE_ID,CELLS.FROM_DATE,D.DAY,NVL(CELLS.TO_DATE,SYSDATE) DEMOLISHED,D.STATION,D.OFFSET_FT
FROM MNR.DISTRESS_SAND_PATCH D
JOIN 
( -- REPLACE VIEW CELLS WITH THIS
SELECT D.ID, D.CELL, D.DESIGN, D.CELL_TYPE, D.CONSTRUCTION_BEGAN_DATE FROM_DATE
  , NVL(D.CELL_END_DATE,(SELECT UNIQUE FROM_DATE_OVER-1 TO_DATE FROM MNR.CELL_ON_CELL CC WHERE CC.ID_UNDER=D.ID)) TO_DATE
  , START_STATION,END_STATION FROM
      (
      SELECT ID, CELL, DESIGN, CELL_TYPE
        , CONSTRUCTION_BEGAN_DATE,CONSTRUCTION_ENDED_DATE
        , CELL_END_DATE
        , START_STATION,END_STATION FROM
( SELECT
ID,
CELL,
DESIGN_NUMBER DESIGN,
CELL_TYPE ,
CONSTRUCTION_BEGAN_DATE ,
CONSTRUCTION_ENDED_DATE ,
NVL(DEMOLISHED_DATE,LEAD(CONSTRUCTION_BEGAN_DATE-1,1,NULL) OVER (PARTITION BY CELL ORDER BY CONSTRUCTION_BEGAN_DATE)) CELL_END_DATE ,
START_STATION ,
END_STATION
FROM
(
   SELECT
   ID 
   ,CELL_NUMBER CELL
   ,SUBSTR(CLASS,24) CELL_TYPE
   ,(SELECT FIRST_LAYER_DATE FROM MNR.CELLS WHERE ID=C.ID) CONSTRUCTION_BEGAN_DATE
   ,CONSTRUCTION_ENDED_DATE
   ,DEMOLISHED_DATE
   ,CASE WHEN LEAD (ID,1,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 1 WHEN LEAD (ID,2,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 2 WHEN LEAD (ID,3,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 3 WHEN LEAD (ID,4,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 4 WHEN LEAD (ID,5,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 5 ELSE 1 END DESIGN_NUMBER
   ,C.START_STATION
   ,C.END_STATION
   FROM MNR.CELL C
   ORDER BY CELL,DESIGN_NUMBER
)
)
      ) D
ORDER BY START_STATION,CELL,DESIGN
) CELLS -- END VIEW CELLS
ON CELLS.CELL=D.CELL
JOIN MNR.LANE LN ON LN.CELL_ID=CELLS.ID AND LN.NAME=D.LANE
WHERE D.DAY BETWEEN CELLS.FROM_DATE AND NVL(CELLS.TO_DATE,SYSDATE)
ORDER BY ID

CREATE OR REPLACE VIEW DISTRESS_ID_ALL AS
-- Excludes DISTRESS_LIGHTWEIGHT_DEFLECT - no ID coluumn
SELECT
UNIQUE ID,CELL, MIN(DAY) FROM_DATE, MAX(DAY) TO_DATE,'DISTRESS_AC' DATA_TABLE
FROM MNR.DISTRESS_AC
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_AGG_SURVEY_SEMI' DATA_TABLE
FROM MNR.DISTRESS_AGG_SURVEY_SEMI
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_ALPS_RESULTS_RUT' DATA_TABLE
FROM MNR.DISTRESS_ALPS_RESULTS_RUT
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_CIRCULR_TEXTR_METER' DATA_TABLE
FROM MNR.DISTRESS_CIRCULR_TEXTR_METER
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL, MIN(DAY) FROM_DATE, MAX(DAY) TO_DATE,'DISTRESS_CUPPING' DATA_TABLE
FROM MNR.DISTRESS_CUPPING
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_FRICTION_DFT' DATA_TABLE
FROM MNR.DISTRESS_FRICTION_DFT
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_FRICTION_TRAILER' DATA_TABLE
FROM MNR.DISTRESS_FRICTION_TRAILER
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL, MIN(DAY) FROM_DATE, MAX(DAY) TO_DATE,'DISTRESS_JPCC' DATA_TABLE
FROM MNR.DISTRESS_JPCC
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_LANE_SHOULDER_DROPOFF' DATA_TABLE
FROM MNR.DISTRESS_LANE_SHOULDER_DROPOFF
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_NUCLEAR_DENSITY' DATA_TABLE
FROM MNR.DISTRESS_NUCLEAR_DENSITY
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_OBSI_DATA' DATA_TABLE
FROM MNR.DISTRESS_OBSI_DATA
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_OBSI_SUMMARY' DATA_TABLE
FROM MNR.DISTRESS_OBSI_SUMMARY
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_PCC_FAULTS' DATA_TABLE
FROM MNR.DISTRESS_PCC_FAULTS
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_PERMEABILITY_DIRECT' DATA_TABLE
FROM MNR.DISTRESS_PERMEABILITY_DIRECT
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_RIDE_LISA' DATA_TABLE
FROM MNR.DISTRESS_RIDE_LISA
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_RIDE_PATHWAYS' DATA_TABLE
FROM MNR.DISTRESS_RIDE_PATHWAYS
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_RIDE_PAVETECH' DATA_TABLE
FROM MNR.DISTRESS_RIDE_PAVETECH
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_RUTTING_DIPSTICK' DATA_TABLE
FROM MNR.DISTRESS_RUTTING_DIPSTICK
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_RUTTING_STRAIGHT_EDGE' DATA_TABLE
FROM MNR.DISTRESS_RUTTING_STRAIGHT_EDGE
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_SAND_PATCH' DATA_TABLE
FROM MNR.DISTRESS_SAND_PATCH
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_SCHMIDT_HAMMER' DATA_TABLE
FROM MNR.DISTRESS_SCHMIDT_HAMMER
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_SOUND_ABSORPTION' DATA_TABLE
FROM MNR.DISTRESS_SOUND_ABSORPTION
GROUP BY ID,CELL
UNION
ALL
SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_WATER_PERMEABILITY' DATA_TABLE
FROM MNR.DISTRESS_WATER_PERMEABILITY
GROUP BY ID,CELL

SELECT
UNIQUE ID,CELL,
MIN(DAY) FROM_DATE,
MAX(DAY) TO_DATE,
'DISTRESS_LIGHTWEIGHT_DEFLECT' DATA_TABLE
FROM MNR.DISTRESS_LIGHTWEIGHT_DEFLECT
GROUP BY ID,CELL
UNION
ALL

SELECT 'DROP SEQUENCE DISTRESS_SEQ; CREATE SEQUENCE DISTRESS_SEQ MINVALUE 1 START WITH ' 
	|| (SELECT MAX(ID)+1 FROM MNR.DISTRESS_ID_ALL) 
	|| ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
	
SELECT D.ID, COUNT(*)
FROM MNR.DISTRESS_ID_ALL D
GROUP BY ID
HAVING COUNT(*) >1

SELECT * FROM mnr.distress_id_all where id=4606049
UPDATE MNR.DISTRESS_RIDE_PATHWAYS SET ID=DISTRESS_SEQ.NEXTVAL WHERE CELL=39 AND TO_CHAR(DAY,'yyyy-mm-dd')='2010-10-12' and ID=4606049
INSERT INTO DISTRESS (ID,VERSION,CREATED_BY,LAST_UPDATED_BY,LAST_UPDATED,DATE_CREATED,LANE_ID) VALUES ((SELECT MAX(ID) FROM MNR.DISTRESS_RIDE_PATHWAYS),1,'CARR1DEN','CARR1DEN',SYSDATE,SYSDATE,16275)

SELECT 
D.ID,D.CELL,C.ID CELL_ID,D.LANE,LN.ID LANE_ID,D.DAY,D.STATION,D.OFFSET_FT
, (SELECT C.CELL_NUMBER FROM MNR.CELL C WHERE C.ID=CC.CELL_ID) CELL_OVER,CC.CELL_ID CELL_ID_OVER
, (SELECT UNIQUE LN.ID FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID WHERE C.ID=CC.CELL_ID AND LN.NAME=D.LANE) LANE_OVER_ID
, 'UPDATE MNR.DISTRESS SET LANE_ID='
|| (SELECT UNIQUE LN.ID FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID WHERE C.ID=CC.CELL_ID AND LN.NAME=D.LANE)
|| ' WHERE ID=' || D.ID || ';' LN_UPDT_SQL,'INSERT INTO DISTRESS (ID,VERSION,CREATED_BY,LAST_UPDATED_BY,LAST_UPDATED,DATE_CREATED,LANE_ID) VALUES ('
|| D.ID || ',1,' || '''CARR1DEN'',''CARR1DEN'',SYSDATE,SYSDATE,' 
|| CASE WHEN (D.DAY > '29-OCT-2008' AND D.CELL IN (5,14)) THEN (SELECT UNIQUE LN.ID FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID WHERE C.ID=CC.CELL_ID AND LN.NAME=D.LANE)
ELSE LN.ID
END
|| ');' DISTRESS_UPDT_SQL
FROM MNR.DISTRESS_SAND_PATCH D
JOIN MNR.CELL C ON C.CELL_NUMBER=D.CELL
JOIN MNR.LANE LN ON LN.CELL_ID=C.ID AND LN.NAME=D.LANE
JOIN MNR.CELL_CELL CC ON C.ID=CC.CELL_COVERED_BY_ID AND D.STATION BETWEEN (SELECT START_STATION FROM MNR.CELL C WHERE ID=CC.CELL_ID) AND (SELECT END_STATION FROM MNR.CELL C WHERE ID=CC.CELL_ID)
WHERE D.DAY > '29-OCT-2008' AND D.CELL IN (5,14)
ORDER BY CELL,STATION,LANE

SELECT 
D.ID,D.CELL,CELLS.ID CELL_ID,D.LANE,LN.ID LANE_ID,CELLS.FROM_DATE,D.DAY,NVL(CELLS.TO_DATE,SYSDATE) DEMOLISHED,D.STATION,D.OFFSET_FT
FROM MNR.DISTRESS_SAND_PATCH D
JOIN 
( -- REPLACE VIEW CELLS WITH THIS
SELECT D.ID, D.CELL, D.DESIGN, D.CELL_TYPE, D.CONSTRUCTION_BEGAN_DATE FROM_DATE
  , NVL(D.CELL_END_DATE,(SELECT UNIQUE FROM_DATE_OVER-1 TO_DATE FROM MNR.CELL_ON_CELL CC WHERE CC.ID_UNDER=D.ID)) TO_DATE
  , START_STATION,END_STATION FROM
      (
      SELECT ID, CELL, DESIGN, CELL_TYPE
        , CONSTRUCTION_BEGAN_DATE,CONSTRUCTION_ENDED_DATE
        , CELL_END_DATE
        , START_STATION,END_STATION FROM
( SELECT
ID,
CELL,
DESIGN_NUMBER DESIGN,
CELL_TYPE ,
CONSTRUCTION_BEGAN_DATE ,
CONSTRUCTION_ENDED_DATE ,
NVL(DEMOLISHED_DATE,LEAD(CONSTRUCTION_BEGAN_DATE-1,1,NULL) OVER (PARTITION BY CELL ORDER BY CONSTRUCTION_BEGAN_DATE)) CELL_END_DATE ,
START_STATION ,
END_STATION
FROM
(
   SELECT
   ID 
   ,CELL_NUMBER CELL
   ,SUBSTR(CLASS,24) CELL_TYPE
   ,(SELECT FIRST_LAYER_DATE FROM MNR.CELLS WHERE ID=C.ID) CONSTRUCTION_BEGAN_DATE
   ,CONSTRUCTION_ENDED_DATE
   ,DEMOLISHED_DATE
   ,CASE WHEN LEAD (ID,1,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 1 WHEN LEAD (ID,2,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 2 WHEN LEAD (ID,3,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 3 WHEN LEAD (ID,4,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 4 WHEN LEAD (ID,5,NULL) OVER (PARTITION BY CELL_NUMBER ORDER BY C.CONSTRUCTION_ENDED_DATE DESC) IS NULL THEN 5 ELSE 1 END DESIGN_NUMBER
   ,C.START_STATION
   ,C.END_STATION
   FROM MNR.CELL C
   ORDER BY CELL,DESIGN_NUMBER
)
)
      ) D
ORDER BY START_STATION,CELL,DESIGN
) CELLS -- END VIEW CELLS
ON CELLS.CELL=D.CELL
JOIN MNR.LANE LN ON LN.CELL_ID=CELLS.ID AND LN.NAME=D.LANE
WHERE D.DAY BETWEEN CELLS.FROM_DATE AND NVL(CELLS.TO_DATE,SYSDATE)
ORDER BY ID

