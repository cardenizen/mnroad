-r-SELECT min(id) minimum, max(id) maximum from Sensor;
SELECT 'Mat_Samples ', min(id) minimum, max(id) maximum from Mat_Samples ;
SELECT 'Layer       ', min(id) minimum, max(id) maximum from Layer       ;
SELECT 'Material    ', min(id) minimum, max(id) maximum from Material    ;
SELECT 'Lane        ', min(id) minimum, max(id) maximum from Lane        ;
SELECT 'Cell        ', min(id) minimum, max(id) maximum from Cell        ;
SELECT 'Road_Section', min(id) minimum, max(id) maximum from Road_Section;
SELECT 'Facility    ', min(id) minimum, max(id) maximum from Facility    ;


--
DROP TABLE JSEC_ROLE_PERMISSION_REL PURGE;
DROP TABLE JSEC_USER_PERMISSION_REL PURGE;
DROP TABLE JSEC_PERMISSION PURGE;
DROP TABLE JSEC_USER_ROLE_REL PURGE;
DROP TABLE JSEC_USER PURGE;
DROP TABLE JSEC_ROLE PURGE;
--
--DROP TABLE SENSOR PURGE;
--DROP TABLE MAT_SAMPLES PURGE;
--DROP TABLE LAYER PURGE;
--DROP TABLE MATERIAL PURGE;
--DROP TABLE LANE PURGE;
--DROP TABLE CELL PURGE;
--DROP TABLE ROAD_SECTION PURGE;
--DROP TABLE FACILITY PURGE;
SELECT 'CREATE SEQUENCE MNROAD_ID_SEQ MINVALUE 1 START WITH ' || MNROAD_ID_SEQ.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
--DROP SEQUENCE MNROAD_ID_SEQ;
SELECT 'CREATE SEQUENCE JSEC_ID_SEQ MINVALUE 1 START WITH ' || JSEC_ID_SEQ.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
--DROP SEQUENCE JSEC_ID_SEQ;
SELECT 'CREATE SEQUENCE MAT_SAMPLES_ID_SEQ MINVALUE 1 START WITH ' || MAT_SAMPLES_ID_SEQ.NEXTVAL || ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
--DROP SEQUENCE MNROAD_ID_SEQ;
SELECT 'CREATE SEQUENCE MAT_SAMPLES_ID_SEQ MINVALUE 1 START WITH ' 
	|| (SELECT MAX(ID)+1 FROM MAT_SAMPLES) 
	|| ' INCREMENT BY 1 CACHE 20;' FROM DUAL;
--DROP SEQUENCE MAT_SAMPLES_ID_SEQ;
DROP SEQUENCE DISTRESS_SEQ;
CREATE SEQUENCE DISTRESS_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 CACHE 20;
--
CREATE TABLE FACILITY
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   NAME VARCHAR2(400) NOT NULL,
   DESCRIPTION VARCHAR2(400) NOT NULL,
   DATE_CREATED  TIMESTAMP NOT NULL,
   LAST_UPDATED  TIMESTAMP NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--
CREATE TABLE ROAD_SECTION
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   DESCRIPTION VARCHAR2(400) NOT NULL,
   FACILITY_ID NUMBER(19) NOT NULL,
   START_STATION NUMBER(8,2) NOT NULL,
   END_STATION NUMBER(8,2) NOT NULL,
   DATE_CREATED  TIMESTAMP NOT NULL,
   LAST_UPDATED  TIMESTAMP NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--
ALTER TABLE ROAD_SECTION
                ADD CONSTRAINT FACILITY_FK
                FOREIGN KEY (FACILITY_ID)
                REFERENCES FACILITY(ID)
;

CREATE TABLE CELL
(
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE CELL
                ADD CONSTRAINT ROAD_SECTION_FK
                FOREIGN KEY (ROAD_SECTION_ID)
                REFERENCES ROAD_SECTION(ID)
;
--
CREATE TABLE LANE
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CELL_ID NUMBER(19) NOT NULL,
   LANE_NUM NUMBER(10) NOT NULL,
   NAME VARCHAR2(11) NOT NULL,
   WIDTH NUMBER(10) NOT NULL,
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE LANE
                ADD CONSTRAINT CELL_FK
                FOREIGN KEY (CELL_ID)
                REFERENCES CELL(ID)
;
--
CREATE TABLE LAYER
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CONSTRUCT_END_DATE  DATE,
   CONSTRUCT_START_DATE  DATE NOT NULL,
   LANE_ID NUMBER(19),
   LAYER_NUM NUMBER(2) NOT NULL,
   MATERIAL_ID number(19) NOT NULL,
   THICKNESS NUMBER(8,3) NOT NULL,
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE LAYER
                ADD CONSTRAINT LANE_FK
                FOREIGN KEY (LANE_ID)
                REFERENCES LANE(ID)
;
--
CREATE TABLE MATERIAL
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   BASIC_MATERIAL VARCHAR2(255),
   DESCRIPTION VARCHAR2(255),
   COMPONENT_MODIFICATION VARCHAR2(255),
   DISPLAY_NAME VARCHAR2(255) NOT NULL,
   MN_DOT_SPEC_NUMBER VARCHAR2(10),
   PROCESS_MODIFICATION VARCHAR2(255),
   SPEC_YEAR NUMBER(10),
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL
)
TABLESPACE MDTB01 NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
--DROP TABLE MAT_SAMPLES PURGE;
CREATE TABLE MAT_SAMPLES
(
   MNROAD_ID VARCHAR2(11) NOT NULL,
   CELL NUMBER(10),
   STATION float(126),
   OFFSET float(126),
   FIELD_ID VARCHAR2(25),
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   COMMENTS VARCHAR2(250),
   CONTACT_PERSON VARCHAR2(24),
   CONTAINER_TYPE VARCHAR2(30),
   COURSE VARCHAR2(8),
   DEPTH_CODE VARCHAR2(40),
   LIFT_NUMBER NUMBER(10),
   MATERIAL_GROUP VARCHAR2(40),
   PIECE_NUMBER NUMBER(10),
   SAMPLE_CURE_TIME float(126),
   SAMPLE_DATE timestamp,
   SAMPLE_DEPTH_BOTTOM float(126),
   SAMPLE_DEPTH_TOP float(126),
   SAMPLE_TIME VARCHAR2(30),
   SPEC VARCHAR2(15),
   STORAGE_LOCATION VARCHAR2(50),
   TAKEN_FROM_LAYER_ID NUMBER(19),
   TESTPAD_OFFSET_STATION float(126),
   TESTPAD_STATION float(126),
   USER_INIT VARCHAR2(10),
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL,
   WHERE_RESULTS VARCHAR2(200)
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
-- SELECT MNROAD_ID from MAT_SAMPLES GROUP BY MNROAD_ID HAVING COUNT(*) > 1
create unique index MNROAD_ID_UIDX on MAT_SAMPLES (MNROAD_ID) tablespace INDX;
alter table MAT_SAMPLES add (TAKEN_FROM_LAYER_ID NUMBER(19));
ALTER TABLE MAT_SAMPLES
ADD CONSTRAINT MAT_SAMPLES_LAYER_FK
FOREIGN KEY (TAKEN_FROM_LAYER_ID)
REFERENCES LAYER(ID) ON DELETE CASCADE
--
CREATE TABLE PCC_PANEL
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   CREATED_BY varchar2(255) NOT NULL,
   DATE_CREATED timestamp NOT NULL,
   LAST_UPDATED timestamp NOT NULL,
   LAST_UPDATED_BY varchar2(255) NOT NULL,
   LAYER_ID number(19) NOT NULL,
   PANEL_LENGTH number(7),
   PANEL_WIDTH number(7)
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE;
--
GRANT SELECT ON MNR.PCC_PANEL TO MNRU;   
--
CREATE TABLE SENSOR
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   CELL NUMBER(3) NOT NULL,
   MODEL VARCHAR2(3) NOT NULL,
   SEQ NUMBER(3) NOT NULL,
   CONSTRUCTION_NUMBER NUMBER(3),
   CURRENT_STATUS VARCHAR2(20),
   CABINET VARCHAR2(4),
   STATION_FT NUMBER(8,2),
   OFFSET_FT NUMBER(7,2),
   DATA_COLLECTION_POINT VARCHAR2(20),
   NORTHING_FT NUMBER(10,3),
   EASTING_FT NUMBER(10,3),
   PAVE_ELEV_FT NUMBER(7,3),
   SENSOR_ELEV_FT NUMBER(7,3),
   DEPTH_FT NUMBER(8,3),
   DEPTH_END_FT NUMBER(6,3),
   CHAIR_POSITION VARCHAR2(7),
   ROADWAY_ORIENTATION VARCHAR2(13),
   ON_OFF_LINE VARCHAR2(3),
   DYNAMIC_STATIC char(1),
   ROADWAY_LOCATION VARCHAR2(20),
   LOCATION_MATERIAL VARCHAR2(40),
   LOCATION_LAYER VARCHAR2(15),
   LOCATION_GROUP NUMBER(2),
   COMMENTS VARCHAR2(255),
   DEPTH_MM NUMBER(9,3),
   OFFSET_MM NUMBER(10,3),
   DATE_UPDATED timestamp,
   DEPTH_IN NUMBER(6,3),
   U_ID VARCHAR2(20) NOT NULL,
   DATE_CREATED timestamp
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE INDEX SENSOR_LOCGROUP_BIDX ON SENSOR(LOCATION_GROUP) tablespace INDX
;
CREATE INDEX SENSOR_RDWYLOC_BIDX ON SENSOR(ROADWAY_LOCATION) tablespace INDX
;
CREATE INDEX SENSOR_LOCMAT_BIDX ON SENSOR(LOCATION_MATERIAL) tablespace INDX
;
CREATE INDEX SENSOR_SEQ_BIDX ON SENSOR(SEQ) tablespace INDX
;
CREATE UNIQUE INDEX SENSOR_UIDX ON SENSOR(U_ID) tablespace INDX
;
CREATE INDEX SENSOR_MODEL_BIDX ON SENSOR(MODEL) tablespace INDX
;
CREATE INDEX SENSOR_CELL_BIDX ON SENSOR(CELL) tablespace INDX
;
--

CREATE TABLE JSEC_USER
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   PASSWORD_HASH varchar2(255) NOT NULL,
   USERNAME varchar2(255) NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE TABLE JSEC_ROLE
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   NAME varchar2(255) NOT NULL,
   IN_DIRECTORY NUMBER(1)   
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE UNIQUE INDEX JSEC_ROLE_NAME ON JSEC_ROLE(NAME)
;
CREATE TABLE JSEC_PERMISSION
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   POSSIBLE_ACTIONS varchar2(255) NOT NULL,
   TYPE varchar2(255) NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
CREATE UNIQUE INDEX JSEC_PERM_TYPE ON JSEC_PERMISSION(TYPE)
;
CREATE TABLE JSEC_ROLE_PERMISSION_REL
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   ACTIONS varchar2(255) NOT NULL,
   PERMISSION_ID number(19) NOT NULL,
   ROLE_ID number(19) NOT NULL,
   TARGET varchar2(255) NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE JSEC_ROLE_PERMISSION_REL
ADD CONSTRAINT FK6DF5807AE3CC60D0
FOREIGN KEY (ROLE_ID)
REFERENCES JSEC_ROLE(ID) ON DELETE CASCADE
;
ALTER TABLE JSEC_ROLE_PERMISSION_REL
ADD CONSTRAINT FK6DF5807AEB28BDB0
FOREIGN KEY (PERMISSION_ID)
REFERENCES JSEC_PERMISSION(ID) ON DELETE CASCADE
;
CREATE TABLE JSEC_USER_PERMISSION_REL
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   ACTIONS varchar2(255) NOT NULL,
   PERMISSION_ID number(19) NOT NULL,
   TARGET varchar2(255),
   USER_ID number(19) NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE JSEC_USER_PERMISSION_REL
ADD CONSTRAINT FK28FF608588F724B0
FOREIGN KEY (USER_ID)
REFERENCES JSEC_USER(ID) ON DELETE CASCADE
;
ALTER TABLE JSEC_USER_PERMISSION_REL
ADD CONSTRAINT FK28FF6085EB28BDB0
FOREIGN KEY (PERMISSION_ID)
REFERENCES JSEC_PERMISSION(ID) ON DELETE CASCADE
;
CREATE TABLE JSEC_USER_ROLE_REL
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   ROLE_ID number(19) NOT NULL,
   USER_ID number(19) NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE JSEC_USER_ROLE_REL
ADD CONSTRAINT FK238F64ACE3CC60D0
FOREIGN KEY (ROLE_ID)
REFERENCES JSEC_ROLE(ID) ON DELETE CASCADE
;
ALTER TABLE JSEC_USER_ROLE_REL
ADD CONSTRAINT FK238F64AC88F724B0
FOREIGN KEY (USER_ID)
REFERENCES JSEC_USER(ID) ON DELETE CASCADE
;


CREATE SEQUENCE VEHICLE_TRACKING MINVALUE 1 START WITH 1 INCREMENT BY 1 CACHE 200;
DROP SEQUENCE VEHICLE_TRACKING;
CREATE TABLE TRACKED_VEHICLE
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   DESCRIPTION VARCHAR(40) NOT NULL,
   -- GPS_MOUNT_ OFFSETS are relative to the center of the front axle
   GPS_MOUNT_LONGITUDINAL_OFFSET NUMBER(8,5),
   GPS_MOUNT_TRANSVERSE_OFFSET NUMBER(8,5),
   -- Axles are numbered from front to back beginning with 1
   -- Minimum 2, Maximum 20
   NUMBER_OF_AXLES NUMBER(2),
   -- TIRE_SPACING_WIDTH_NUMBER_LIST contains a comma separated list of axleSpacing_tireWidth_tireSpacing_numberOfAxleTires
   -- axleSpacing: distance (feet) from previous axle
   -- tireWidth:  width (inches) of tire surface contact
   -- tireSpacing: center to center distance (feet) between outside tires
   -- number: number of tires on the axle
   -- example: Two-Axle, Six-Tire, Single Unit Trucks
   -- front axle: 0.0_8.5_8.2_2,12.3_8.5_10.2_4 
   TIRE_SPACING_WIDTH_NUMBER_LIST VARCHAR(400),
   DATE_CREATED  TIMESTAMP NOT NULL,
   LAST_UPDATED  TIMESTAMP NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;


INSERT INTO TRACKED_VEHICLE  (ID, VERSION, DESCRIPTION, GPS_MOUNT_LONGITUDINAL_OFFSET, GPS_MOUNT_TRANSVERSE_OFFSET, NUMBER_OF_AXLES, TIRE_SPACING_WIDTH_NUMBER_LIST, DATE_CREATED, LAST_UPDATED)
                VALUES(1,0,'MnROAD 80k truck', 3.3, 0.0, 5, 'N/A',sysdate,sysdate);


CREATE TABLE VEHICLE_LOCATION
(
   OBS_DATETIME TIMESTAMP NOT NULL,
   LATITUDE NUMBER(10,8) NOT NULL,
   LATITUDE_DIRECTION CHAR(1) NOT NULL,
   LONGITUDE NUMBER(10,8) NOT NULL,
   LONGITUDE_DIRECTION CHAR(1) NOT NULL,
   VEHICLE_ID NUMBER(19) NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;

DROP SEQUENCE VEHICLE_TRACKING;
DROP SEQUENCE SL_SEQ;
CREATE SEQUENCE SL_SEQ MINVALUE 1 START WITH 1 INCREMENT BY 1 CACHE 200;
INSERT INTO SENSOR  
(SELECT 
SL_SEQ.NEXTVAL AS ID
, 0 VERSION
, CELL
, MODEL
, SEQ
, CONSTRUCTION_NUMBER
, CURRENT_STATUS
, CABINET
, STATION_FT
, OFFSET_FT
, DATA_COLLECTION_POINT
, NORTHING_FT
, EASTING_FT
, PAVE_ELEV_FT
, SENSOR_ELEV_FT
, DEPTH_FT
, DEPTH_END_FT
, CHAIR_POSITION
, ROADWAY_ORIENTATION
, ON_OFF_LINE
, DYNAMIC_STATIC
, ROADWAY_LOCATION
, LOCATION_MATERIAL
, LOCATION_LAYER
, LOCATION_GROUP
, COMMENTS
, DEPTH_MM
, OFFSET_MM
, DATE_UPDATED
, DEPTH_IN
, U_ID
, SYSDATE DATE_CREATED
FROM SENSOR_LOCATIONS)
;
DROP SEQUENCE SL_SEQ;

CREATE TABLE TRANSVERSE_JOINT
(
   LAYER_ID number(22),
   STATION number(12),
   JOINT_NUMBER number(5),
   SEALANT_TYPE char(20),
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(22) NOT NULL,
   LAST_UPDATED timestamp,
   DATE_CREATED timestamp,
   CREATED_BY varchar2(10),
   LAST_UPDATED_BY varchar2(10)
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;
ALTER TABLE TRANSVERSE_JOINT
ADD CONSTRAINT LAYER_FK
FOREIGN KEY (LAYER_ID)
REFERENCES LAYER(LAYER_ID) ON DELETE CASCADE
;

CREATE TABLE DOWEL_BAR
(
   TR_JOINT_ID number(22) NOT NULL,
   DOWEL_NUMBER varchar2(12) NOT NULL,
   EMBEDMENT_LENGTH_IN number(5),
   TRANSVERSE_OFFSET_IN number(8),
   DIAMETER_WIDTH number(8),
   LENGTH number(3),
   TYPE varchar2(255),
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(22) NOT NULL,
   DATE_CREATED timestamp,
   LAST_UPDATED timestamp,
   CREATED_BY varchar2(10),
   LAST_UPDATED_BY varchar2(10),
   LANE_ID number(22)
)
;
ALTER TABLE DOWEL_BAR
ADD CONSTRAINT TR_LAYER_FK
FOREIGN KEY (TR_JOINT_ID)
REFERENCES TRANSVERSE_JOINT(TR_JOINT_ID) ON DELETE CASCADE
;



--DROP TABLE MNR.NATURAL_KEY PURGE;
CREATE TABLE NATURAL_KEY 
(
   ID NUMBER(19) PRIMARY KEY NOT NULL,
   VERSION NUMBER(19) NOT NULL,
   TABLE_NAME VARCHAR2(30) NOT NULL,
   COLUMN_NAME_LIST VARCHAR2(400) NOT NULL,
   CREATED_BY VARCHAR2(11) NOT NULL,
   DATE_CREATED  TIMESTAMP NOT NULL,
   LAST_UPDATED_BY VARCHAR2(11) NOT NULL,
   LAST_UPDATED  TIMESTAMP NOT NULL
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;

INSERT INTO MNR.NATURAL_KEY (ID,VERSION,TABLE_NAME,COLUMN_NAME_LIST,CREATED_BY,DATE_CREATED,LAST_UPDATED_BY, LAST_UPDATED) VALUES (1,0,'FACILITY','NAME','carr1den',SYSDATE,'carr1den',SYSDATE);
INSERT INTO MNR.NATURAL_KEY (ID,VERSION,TABLE_NAME,COLUMN_NAME_LIST,CREATED_BY,DATE_CREATED,LAST_UPDATED_BY, LAST_UPDATED) VALUES (1,0,'ROAD_SECTION','NAME','carr1den',SYSDATE,'carr1den',SYSDATE);

SELECT 
NAME, COUNT(*) 
FROM MNR.FACILITY
GROUP BY NAME
HAVING COUNT(*) > 1;

SELECT DESCRIPTION, COUNT(*) 
FROM MNR.ROAD_SECTION
GROUP BY DESCRIPTION
HAVING COUNT(*) > 1;

SELECT CELL_NUMBER, COUNT(*) 
FROM MNR.CELL
GROUP BY CELL_NUMBER
HAVING COUNT(*) > 1;

--DROP TABLE LANE_EVENT PURGE;
CREATE TABLE LANE_EVENT
(
   WORK_TYPE 	varchar2(30) NOT NULL,
   WORK_DATE 	DATE NOT NULL,
   WORK_DESCRIPTION 	varchar2(2000) NOT NULL,
   LANE_ID 	number(22) NOT NULL,
   ID 	number(19) PRIMARY KEY NOT NULL,
   VERSION 	number(22) NOT NULL,
   DATE_CREATED 	DATE NOT NULL,
   LAST_UPDATED 	DATE,
   CREATED_BY 	varchar2(10) NOT NULL,
   LAST_UPDATED_BY 	varchar2(10)
)
TABLESPACE MNR_DATA NOLOGGING
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE
;

ALTER TABLE LANE_EVENT
ADD CONSTRAINT LANE_EVENT_LANE_FK
FOREIGN KEY (LANE_ID)
REFERENCES LANE(ID)
;


CREATE TABLE ATTACHMENT
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   CONTENT_TYPE varchar2(255),
   DATE_CREATED date NOT NULL,
   EXT varchar2(255),
   INPUT_NAME varchar2(255) NOT NULL,
   LENGTH number(19) NOT NULL,
   LNK_ID number(19) NOT NULL,
   NAME varchar2(255) NOT NULL,
   POSTER_CLASS varchar2(255) NOT NULL,
   POSTER_ID number(19) NOT NULL
)
;

CREATE TABLE ATTACHMENT_LINK
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   REFERENCE_CLASS varchar2(255) NOT NULL,
   REFERENCE_ID number(19) NOT NULL
)
;

ALTER TABLE ATTACHMENT
ADD CONSTRAINT FK8AF75923BE8D343C
FOREIGN KEY (LNK_ID)
REFERENCES ATTACHMENT_LINK(ID) ON DELETE CASCADE
;

CREATE TABLE DB_TABLE
(
   ID number(19) PRIMARY KEY NOT NULL,
   VERSION number(19) NOT NULL,
   NAME varchar2(30) NOT NULL
)
;


SELECT D.CELL
,DL.MODEL
,DL.SEQ
,D.TCS_TESTNAME
,D.TCS_DATASET
,TO_CHAR(D.TEST_DATE,'yyyy-mm-dd')||' '||D.HOUR||':'||D.MINUTE||':'||D.SECOND TIME
,D.TIRE_OFFSET_IN
,DL.REL_OFFSET_IN
,DL.TIRE_OFFSET_IN NEW_OFFSET_IN
FROM mnr.DYNAMIC_LOAD_TEST_DESCRIPTIONS D 
JOIN MNR.DYNA_LOADS DL ON D.TCS_TESTNAME=DL.TCS_TESTNAME AND D.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET,TIME

SELECT D.CELL
,DL.MODEL
,DL.SEQ
,D.TCS_TESTNAME
,D.TCS_DATASET
,TO_CHAR(D.TEST_DATE,'yyyy-mm-dd')||' '||D.HOUR||':'||D.MINUTE||':'||D.SECOND TIME
,SMS.SENSOR_OFFSET_IN
,DL.REL_OFFSET_IN
,DL.TIRE_OFFSET_IN NEW_OFFSET_IN
FROM mnr.DYNAMIC_LOAD_TEST_DESCRIPTIONS D 
JOIN MNR.DYNA_LOADS DL ON D.TCS_TESTNAME=DL.TCS_TESTNAME AND D.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
JOIN
(SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 SENSOR_OFFSET_IN
FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
) SMS ON D.CELL=SMS.CELL AND DL.MODEL=SMS.MODEL AND DL.SEQ = SMS.SEQ
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET,TIME

SELECT CELL,MODEL,SEQ,TCS_TESTNAME TESTNAME,TCS_DATASET DATASET,TIME,ROUND(SENSOR_OFFSET_IN,2) SENSOR_OFFSET,ROUND(REL_OFFSET_IN,2) REL_OFFSET,ROUND(SO_MINUS_RO,2) SO_MINUS_RO,ROUND(TIRE_OFFSET_IN,2) TIRE_OFFSET, ABS(SO_MINUS_RO - TIRE_OFFSET_IN) DIFF
 FROM (

SELECT 
DLTD.CELL,DL.MODEL,DL.SEQ
,DLTD.TCS_TESTNAME,DLTD.TCS_DATASET
,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd')||' '||DLTD.HOUR||':'||DLTD.MINUTE||':'||DLTD.SECOND TIME
,CMS.SENSOR_OFFSET_IN
,DL.REL_OFFSET_IN
,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN SO_MINUS_RO
,DL.TIRE_OFFSET_IN TIRE_OFFSET_IN
FROM MNR.DYNAMIC_LOAD_TEST_DESCRIPTIONS DLTD 
JOIN 
(SELECT
    S.REFERENCE_CELL CELL,
    S.REFERENCE_MODEL MODEL,
    S.REFERENCE_SEQUENCE SEQ,
    S.RELATIVE_OFFSET REL_OFFSET_IN,
    S.TESTNAME TCS_TESTNAME,
    S.DATA_SET TCS_DATASET,
    S.DAY TEST_DATE,
    S.HOUR,
    S.MINUTE,
    S.SECOND,
    S.TRUCK_FWD_IND,
    S.IR_TEMP,
    CASE
      WHEN (S.RELATIVE_OFFSET <> -999 AND S.RELATIVE_OFFSET IS NOT NULL) THEN
        (           (SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
          )           - S.RELATIVE_OFFSET         ) 
      ELSE
        NULL
    END TIRE_OFFSET_IN FROM MNR.TCS_DATA_SETUP S 
WHERE REFERENCE_CELL IS NOT NULL AND REFERENCE_MODEL IS NOT NULL AND REFERENCE_SEQUENCE IS NOT NULL    
) DL ON DLTD.TCS_TESTNAME=DL.TCS_TESTNAME AND DLTD.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
JOIN (
  SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 SENSOR_OFFSET_IN
  FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
    JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
    JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
    JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
) CMS ON DLTD.CELL=CMS.CELL AND DL.MODEL=CMS.MODEL AND DL.SEQ = CMS.SEQ
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET,TIME

) DS WHERE SO_MINUS_RO <> TIRE_OFFSET_IN

SELECT W.AIR_TEMP_DEG_C,a.CELL, a.TEST_DATE, a.HOUR, a.MINUTE, a.SECOND,a.LANE, a.TCS_DATASET, a.TCS_TESTNAME, a.TRUCK_FWD_IND, a.VEHICLE_SPEED, a.TIRE_OFFSET_IN,
a.IR_TEMP, c.MODEL, c.SEQ, c.DLTV_ID, c.ELAPSED_TIME, c.VALUE_TYPE, c.VALUE_ID, c.VALUE, c.PEAK_OR_TROUGH
FROM mnr.DYNAMIC_LOAD_TEST_DESCRIPTIONS a join mnr.DYNAMIC_LOAD_TEST_VALUES c on a.TCS_TESTNAME = c.TESTNAME and a.TCS_DATASET = c.DATA_SET
JOIN mnr.weather_metric W ON W.DAY=C.TEST_DATE AND W.HOUR=C.HOUR AND W.QHR=2
where a.CELL=27
and a.TRUCK_FWD_IND='T'
order by a.CELL,a.TEST_DATE,a.HOUR

SELECT CELL,MODEL,SEQ,TCS_TESTNAME TESTNAME,TCS_DATASET DATASET
--,TIME
,ROUND(SENSOR_OFFSET_IN,2) SENSOR_OFFSET,ROUND(TIRE_OFFSET_IN,2) TIRE_OFFSET
,TEST_DATE,HOUR,MINUTE,SECOND
,TRUCK_FWD_IND
,IR_TEMP
  FROM (
SELECT 
DLTD.CELL,DL.MODEL,DL.SEQ
,DLTD.TCS_TESTNAME,DLTD.TCS_DATASET
--,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd')||' '||LPAD(TO_CHAR(DLTD.HOUR),2,'0')||':'||LPAD(TO_CHAR(DLTD.MINUTE),2,'0')||':'||LPAD(TO_CHAR(DLTD.SECOND),2,'0') TIME
,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd') TEST_DATE
,LPAD(TO_CHAR(DLTD.HOUR),2,'0') HOUR
,LPAD(TO_CHAR(DLTD.MINUTE),2,'0') MINUTE
,LPAD(TO_CHAR(DLTD.SECOND),2,'0') DAY
,LPAD(TO_CHAR(DL.SECOND),2,'0') SECOND
,CMS.SENSOR_OFFSET_IN
,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN TIRE_OFFSET_IN
,DL.TRUCK_FWD_IND
,DL.IR_TEMP
--,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN SO_MINUS_RO
--,DL.TIRE_OFFSET_IN TIRE_OFFSET_IN
FROM MNR.DYNAMIC_LOAD_TEST_DESCRIPTIONS DLTD 
JOIN 
(SELECT
    S.REFERENCE_CELL CELL,
    S.REFERENCE_MODEL MODEL,
    S.REFERENCE_SEQUENCE SEQ,
    S.RELATIVE_OFFSET REL_OFFSET_IN,
    S.TESTNAME TCS_TESTNAME,
    S.DATA_SET TCS_DATASET,
    S.DAY TEST_DATE,
    S.HOUR,
    S.MINUTE,
    S.SECOND,
    S.TRUCK_FWD_IND,
    S.IR_TEMP,
    CASE
      WHEN (S.RELATIVE_OFFSET <> -999 AND S.RELATIVE_OFFSET IS NOT NULL) THEN
        (           (SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
          )           - S.RELATIVE_OFFSET         ) 
      ELSE
        NULL
    END TIRE_OFFSET_IN FROM MNR.TCS_DATA_SETUP S 
WHERE REFERENCE_CELL IS NOT NULL AND REFERENCE_MODEL IS NOT NULL AND REFERENCE_SEQUENCE IS NOT NULL    
) DL ON DLTD.TCS_TESTNAME=DL.TCS_TESTNAME AND DLTD.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
JOIN (
  SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 SENSOR_OFFSET_IN
  FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
    JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
    JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
    JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
) CMS ON DLTD.CELL=CMS.CELL AND DL.MODEL=CMS.MODEL AND DL.SEQ = CMS.SEQ
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET
--,TIME
,TEST_DATE,HOUR,MINUTE,DL.SECOND
)  


SELECT W.AIR_TEMP_DEG_F,A.CELL, A.TEST_DATE, A.HOUR, A.MINUTE, A.SECOND,
A.TCS_DATASET, A.TCS_TESTNAME, A.TRUCK_FWD_IND, 
A.TIRE_OFFSET TIRE_OFFSET_IN,
A.IR_TEMP, C.MODEL, C.SEQ, C.DLTV_ID, C.ELAPSED_TIME, C.VALUE_TYPE, C.VALUE_ID, C.VALUE, C.PEAK_OR_TROUGH
FROM 
--MNR.DYNA_LOADS 
(SELECT CELL,MODEL,SEQ,TCS_TESTNAME,TCS_DATASET
--,TIME
,ROUND(SENSOR_OFFSET_IN,2) SENSOR_OFFSET,ROUND(TIRE_OFFSET_IN,2) TIRE_OFFSET
,TEST_DATE,HOUR,MINUTE,SECOND
,TRUCK_FWD_IND
,IR_TEMP
--,DL.TIRE_OFFSET_IN
  FROM (
SELECT 
DLTD.CELL,DL.MODEL,DL.SEQ
,DLTD.TCS_TESTNAME,DLTD.TCS_DATASET
--,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd')||' '||LPAD(TO_CHAR(DLTD.HOUR),2,'0')||':'||LPAD(TO_CHAR(DLTD.MINUTE),2,'0')||':'||LPAD(TO_CHAR(DLTD.SECOND),2,'0') TIME
,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd') TEST_DATE
,LPAD(TO_CHAR(DLTD.HOUR),2,'0') HOUR
,LPAD(TO_CHAR(DLTD.MINUTE),2,'0') MINUTE
,LPAD(TO_CHAR(DLTD.SECOND),2,'0') DAY
,LPAD(TO_CHAR(DL.SECOND),2,'0') SECOND
,CMS.SENSOR_OFFSET_IN
,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN TIRE_OFFSET_IN
,DL.TRUCK_FWD_IND
,DL.IR_TEMP
--,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN SO_MINUS_RO
--,DL.TIRE_OFFSET_IN TIRE_OFFSET_IN
FROM MNR.DYNAMIC_LOAD_TEST_DESCRIPTIONS DLTD 
JOIN 
(SELECT
    S.REFERENCE_CELL CELL,
    S.REFERENCE_MODEL MODEL,
    S.REFERENCE_SEQUENCE SEQ,
    S.RELATIVE_OFFSET REL_OFFSET_IN,
    S.TESTNAME TCS_TESTNAME,
    S.DATA_SET TCS_DATASET,
    S.DAY TEST_DATE,
    S.HOUR,
    S.MINUTE,
    S.SECOND,
    S.TRUCK_FWD_IND,
    S.IR_TEMP,
    CASE
      WHEN (S.RELATIVE_OFFSET <> -999 AND S.RELATIVE_OFFSET IS NOT NULL) THEN
        (           (SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
          )           - S.RELATIVE_OFFSET         ) 
      ELSE
        NULL
    END TIRE_OFFSET_IN FROM MNR.TCS_DATA_SETUP S 
WHERE REFERENCE_CELL IS NOT NULL AND REFERENCE_MODEL IS NOT NULL AND REFERENCE_SEQUENCE IS NOT NULL    
) DL ON DLTD.TCS_TESTNAME=DL.TCS_TESTNAME AND DLTD.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
JOIN (
  SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 SENSOR_OFFSET_IN
  FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
    JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
    JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
    JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
) CMS ON DLTD.CELL=CMS.CELL AND DL.MODEL=CMS.MODEL AND DL.SEQ = CMS.SEQ
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET
--,TIME
,TEST_DATE,HOUR,MINUTE,DL.SECOND
)  
)
A JOIN MNR.DYNAMIC_LOAD_TEST_VALUES C ON A.TCS_TESTNAME = C.TESTNAME AND A.TCS_DATASET = C.DATA_SET
JOIN MNR.WEATHER_ENGLISH W ON W.DAY=C.TEST_DATE AND W.HOUR=C.HOUR AND W.QHR=2
WHERE A.CELL=28
AND A.TRUCK_FWD_IND='F'
ORDER BY A.TEST_DATE,A.TCS_DATASET,A.TCS_TESTNAME,A.CELL,C.MODEL,C.SEQ,C.ELAPSED_TIME


SELECT W.AIR_TEMP_DEG_F,A.CELL, A.TEST_DATE, A.HOUR, A.MINUTE, A.SECOND,
A.TCS_DATASET, A.TCS_TESTNAME, A.TRUCK_FWD_IND, 
A.TIRE_OFFSET TIRE_OFFSET_IN,
A.IR_TEMP, C.MODEL, C.SEQ, C.DLTV_ID, C.ELAPSED_TIME, C.VALUE_TYPE, C.VALUE_ID, C.VALUE, C.PEAK_OR_TROUGH
FROM 
--MNR.DYNA_LOADS 
(SELECT CELL,MODEL,SEQ,TCS_TESTNAME,TCS_DATASET
--,TIME
,ROUND(SENSOR_OFFSET_IN,2) SENSOR_OFFSET,ROUND(TIRE_OFFSET_IN,2) TIRE_OFFSET
,TEST_DATE,HOUR,MINUTE,SECOND
,TRUCK_FWD_IND
,IR_TEMP
--,DL.TIRE_OFFSET_IN
  FROM (
SELECT 
DLTD.CELL,DL.MODEL,DL.SEQ
,DLTD.TCS_TESTNAME,DLTD.TCS_DATASET
--,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd')||' '||LPAD(TO_CHAR(DLTD.HOUR),2,'0')||':'||LPAD(TO_CHAR(DLTD.MINUTE),2,'0')||':'||LPAD(TO_CHAR(DLTD.SECOND),2,'0') TIME
,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd') TEST_DATE
,LPAD(TO_CHAR(DLTD.HOUR),2,'0') HOUR
,LPAD(TO_CHAR(DLTD.MINUTE),2,'0') MINUTE
,LPAD(TO_CHAR(DLTD.SECOND),2,'0') DAY
,LPAD(TO_CHAR(DL.SECOND),2,'0') SECOND
,CMS.SENSOR_OFFSET_IN
,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN TIRE_OFFSET_IN
,DL.TRUCK_FWD_IND
,DL.IR_TEMP
--,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN SO_MINUS_RO
--,DL.TIRE_OFFSET_IN TIRE_OFFSET_IN
FROM MNR.DYNAMIC_LOAD_TEST_DESCRIPTIONS DLTD 
JOIN 
(SELECT
    S.REFERENCE_CELL CELL,
    S.REFERENCE_MODEL MODEL,
    S.REFERENCE_SEQUENCE SEQ,
    S.RELATIVE_OFFSET REL_OFFSET_IN,
    S.TESTNAME TCS_TESTNAME,
    S.DATA_SET TCS_DATASET,
    S.DAY TEST_DATE,
    S.HOUR,
    S.MINUTE,
    S.SECOND,
    S.TRUCK_FWD_IND,
    S.IR_TEMP,
    CASE
      WHEN (S.RELATIVE_OFFSET <> -999 AND S.RELATIVE_OFFSET IS NOT NULL) THEN
        (           (SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
          )           - S.RELATIVE_OFFSET         ) 
      ELSE
        NULL
    END TIRE_OFFSET_IN FROM MNR.TCS_DATA_SETUP S 
WHERE REFERENCE_CELL IS NOT NULL AND REFERENCE_MODEL IS NOT NULL AND REFERENCE_SEQUENCE IS NOT NULL    
) DL ON DLTD.TCS_TESTNAME=DL.TCS_TESTNAME AND DLTD.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
JOIN (
  SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 SENSOR_OFFSET_IN
  FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
    JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
    JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
    JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
) CMS ON DLTD.CELL=CMS.CELL AND DL.MODEL=CMS.MODEL AND DL.SEQ = CMS.SEQ
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET
--,TIME
,TEST_DATE,HOUR,MINUTE,DL.SECOND
)  
)
A JOIN MNR.DYNAMIC_LOAD_TEST_VALUES C ON A.TCS_TESTNAME = C.TESTNAME AND A.TCS_DATASET = C.DATA_SET
JOIN MNR.WEATHER_ENGLISH W ON W.DAY=C.TEST_DATE AND W.HOUR=C.HOUR AND W.QHR=2
WHERE A.CELL=28
AND A.TRUCK_FWD_IND='F'
ORDER BY A.TEST_DATE,A.TCS_DATASET,A.TCS_TESTNAME,A.CELL,C.MODEL,C.SEQ,C.ELAPSED_TIME

SELECT B.TIME DYNA_TEST_TIME 
,TO_NUMBER(SUBSTR(T.TIME_STATION,1,2))*3600 + TO_NUMBER(SUBSTR(T.TIME_STATION,4,2))*60 + TO_NUMBER(SUBSTR(T.TIME_STATION,7,2)) FWD_TIME
,S.*,T.*,D.* FROM MNR.FWD_SESSION S 
  JOIN MNR.FWD_STATION T ON T.SESSION_ID=S.SESSION_ID
  JOIN MNR.FWD_DROP D ON D.STATION_ID=T.STATION_ID
  JOIN (
--
SELECT W.AIR_TEMP_DEG_F,A.CELL, A.TEST_DATE, TO_NUMBER(A.HOUR)*3600+TO_NUMBER(A.MINUTE)*60+TO_NUMBER(A.SECOND) TIME,
A.TCS_DATASET, A.TCS_TESTNAME, A.TRUCK_FWD_IND, 
A.TIRE_OFFSET TIRE_OFFSET_IN,
A.IR_TEMP, C.MODEL, C.SEQ, C.DLTV_ID, C.ELAPSED_TIME, C.VALUE_TYPE, C.VALUE_ID, C.VALUE, C.PEAK_OR_TROUGH
FROM 
(SELECT CELL,MODEL,SEQ,TCS_TESTNAME,TCS_DATASET
,ROUND(SENSOR_OFFSET_IN,2) SENSOR_OFFSET,ROUND(TIRE_OFFSET_IN,2) TIRE_OFFSET
,TEST_DATE,HOUR,MINUTE,SECOND
,TRUCK_FWD_IND
,IR_TEMP
  FROM (
SELECT 
DLTD.CELL,DL.MODEL,DL.SEQ
,DLTD.TCS_TESTNAME,DLTD.TCS_DATASET
,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd') TEST_DATE
,LPAD(TO_CHAR(DLTD.HOUR),2,'0') HOUR
,LPAD(TO_CHAR(DLTD.MINUTE),2,'0') MINUTE
,LPAD(TO_CHAR(DLTD.SECOND),2,'0') DAY
,LPAD(TO_CHAR(DL.SECOND),2,'0') SECOND
,CMS.SENSOR_OFFSET_IN
,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN TIRE_OFFSET_IN
,DL.TRUCK_FWD_IND
,DL.IR_TEMP
FROM MNR.DYNAMIC_LOAD_TEST_DESCRIPTIONS DLTD 
JOIN 
(SELECT
    S.REFERENCE_CELL CELL,
    S.REFERENCE_MODEL MODEL,
    S.REFERENCE_SEQUENCE SEQ,
    S.RELATIVE_OFFSET REL_OFFSET_IN,
    S.TESTNAME TCS_TESTNAME,
    S.DATA_SET TCS_DATASET,
    S.DAY TEST_DATE,
    S.HOUR,
    S.MINUTE,
    S.SECOND,
    S.TRUCK_FWD_IND,
    S.IR_TEMP,
    CASE
      WHEN (S.RELATIVE_OFFSET <> -999 AND S.RELATIVE_OFFSET IS NOT NULL) THEN
        (           (SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
          )           - S.RELATIVE_OFFSET         ) 
      ELSE
        NULL
    END TIRE_OFFSET_IN FROM MNR.TCS_DATA_SETUP S 
WHERE REFERENCE_CELL IS NOT NULL AND REFERENCE_MODEL IS NOT NULL AND REFERENCE_SEQUENCE IS NOT NULL    
) DL ON DLTD.TCS_TESTNAME=DL.TCS_TESTNAME AND DLTD.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
JOIN (
  SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 SENSOR_OFFSET_IN
  FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
    JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
    JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
    JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
) CMS ON DLTD.CELL=CMS.CELL AND DL.MODEL=CMS.MODEL AND DL.SEQ = CMS.SEQ
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET
,TEST_DATE,HOUR,MINUTE,DL.SECOND
)  
)
A JOIN MNR.DYNAMIC_LOAD_TEST_VALUES C ON A.TCS_TESTNAME = C.TESTNAME AND A.TCS_DATASET = C.DATA_SET
JOIN MNR.WEATHER_ENGLISH W ON W.DAY=C.TEST_DATE AND W.HOUR=C.HOUR AND W.QHR=2
WHERE A.CELL=28
AND A.TRUCK_FWD_IND='F'
ORDER BY A.TEST_DATE,A.TCS_DATASET,A.TCS_TESTNAME,A.CELL,C.MODEL,C.SEQ,C.ELAPSED_TIME
--
) B ON TO_CHAR(B.CELL)=S.SECTION_NAME 
  AND B.TEST_DATE=TO_CHAR(T.DATE_STATION,'yyyy-mm-dd') 
  AND TO_NUMBER(SUBSTR(T.TIME_STATION,1,2))*3600 + TO_NUMBER(SUBSTR(T.TIME_STATION,4,2))*60 + TO_NUMBER(SUBSTR(T.TIME_STATION,7,2))
 BETWEEN B.TIME-100 AND B.TIME+100

SELECT B.TIME DYNA_TEST_TIME 
,TO_NUMBER(SUBSTR(T.TIME_STATION,1,2))*3600 + TO_NUMBER(SUBSTR(T.TIME_STATION,4,2))*60 + TO_NUMBER(SUBSTR(T.TIME_STATION,7,2)) FWD_TIME
,S.*,T.*,D.* FROM MNR.FWD_SESSION S 
  JOIN MNR.FWD_STATION T ON T.SESSION_ID=S.SESSION_ID
  JOIN MNR.FWD_DROP D ON D.STATION_ID=T.STATION_ID
  JOIN (
--
SELECT W.AIR_TEMP_DEG_F,A.CELL, A.TEST_DATE, TO_NUMBER(A.HOUR)*3600+TO_NUMBER(A.MINUTE)*60+TO_NUMBER(A.SECOND) TIME,
A.TCS_DATASET, A.TCS_TESTNAME, A.TRUCK_FWD_IND, 
A.TIRE_OFFSET TIRE_OFFSET_IN,
A.IR_TEMP, C.MODEL, C.SEQ, C.DLTV_ID, C.ELAPSED_TIME, C.VALUE_TYPE, C.VALUE_ID, C.VALUE, C.PEAK_OR_TROUGH
FROM 
(SELECT CELL,MODEL,SEQ,TCS_TESTNAME,TCS_DATASET
,ROUND(SENSOR_OFFSET_IN,2) SENSOR_OFFSET,ROUND(TIRE_OFFSET_IN,2) TIRE_OFFSET
,TEST_DATE,HOUR,MINUTE,SECOND
,TRUCK_FWD_IND
,IR_TEMP
  FROM (
SELECT 
DLTD.CELL,DL.MODEL,DL.SEQ
,DLTD.TCS_TESTNAME,DLTD.TCS_DATASET
,TO_CHAR(DLTD.TEST_DATE,'yyyy-mm-dd') TEST_DATE
,LPAD(TO_CHAR(DLTD.HOUR),2,'0') HOUR
,LPAD(TO_CHAR(DLTD.MINUTE),2,'0') MINUTE
,LPAD(TO_CHAR(DLTD.SECOND),2,'0') DAY
,LPAD(TO_CHAR(DL.SECOND),2,'0') SECOND
,CMS.SENSOR_OFFSET_IN
,CMS.SENSOR_OFFSET_IN-DL.REL_OFFSET_IN TIRE_OFFSET_IN
,DL.TRUCK_FWD_IND
,DL.IR_TEMP
FROM MNR.DYNAMIC_LOAD_TEST_DESCRIPTIONS DLTD 
JOIN 
(SELECT
    S.REFERENCE_CELL CELL,
    S.REFERENCE_MODEL MODEL,
    S.REFERENCE_SEQUENCE SEQ,
    S.RELATIVE_OFFSET REL_OFFSET_IN,
    S.TESTNAME TCS_TESTNAME,
    S.DATA_SET TCS_DATASET,
    S.DAY TEST_DATE,
    S.HOUR,
    S.MINUTE,
    S.SECOND,
    S.TRUCK_FWD_IND,
    S.IR_TEMP,
    CASE
      WHEN (S.RELATIVE_OFFSET <> -999 AND S.RELATIVE_OFFSET IS NOT NULL) THEN
        (           (SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
          )           - S.RELATIVE_OFFSET         ) 
      ELSE
        NULL
    END TIRE_OFFSET_IN FROM MNR.TCS_DATA_SETUP S 
WHERE REFERENCE_CELL IS NOT NULL AND REFERENCE_MODEL IS NOT NULL AND REFERENCE_SEQUENCE IS NOT NULL    
) DL ON DLTD.TCS_TESTNAME=DL.TCS_TESTNAME AND DLTD.TCS_DATASET=TO_CHAR(DL.TCS_DATASET)
JOIN (
  SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 SENSOR_OFFSET_IN
  FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
    JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
    JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
    JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
) CMS ON DLTD.CELL=CMS.CELL AND DL.MODEL=CMS.MODEL AND DL.SEQ = CMS.SEQ
WHERE DL.TIRE_OFFSET_IN IS NOT NULL
ORDER BY CELL,SEQ,TCS_TESTNAME,TCS_DATASET
,TEST_DATE,HOUR,MINUTE,DL.SECOND
)  
)
A JOIN MNR.DYNAMIC_LOAD_TEST_VALUES C ON A.TCS_TESTNAME = C.TESTNAME AND A.TCS_DATASET = C.DATA_SET
JOIN MNR.WEATHER_ENGLISH W ON W.DAY=C.TEST_DATE AND W.HOUR=C.HOUR AND W.QHR=2
--WHERE A.CELL=28 AND A.TRUCK_FWD_IND='F'
ORDER BY A.TEST_DATE,A.TCS_DATASET,A.TCS_TESTNAME,A.CELL,C.MODEL,C.SEQ,C.ELAPSED_TIME
--
) B ON TO_CHAR(B.CELL)=S.SECTION_NAME 
  AND B.TEST_DATE=TO_CHAR(T.DATE_STATION,'yyyy-mm-dd') 
  AND TO_NUMBER(SUBSTR(T.TIME_STATION,1,2))*3600 + TO_NUMBER(SUBSTR(T.TIME_STATION,4,2))*60 + TO_NUMBER(SUBSTR(T.TIME_STATION,7,2))
 BETWEEN B.TIME-100 AND B.TIME+100
WHERE B.CELL=28 AND B.TRUCK_FWD_IND='F'

--

SELECT
    S.REFERENCE_CELL CELL,
    S.REFERENCE_MODEL MODEL,
    S.REFERENCE_SEQUENCE SEQ,
    S.RELATIVE_OFFSET REL_OFFSET_IN,
    S.TESTNAME TCS_TESTNAME,
    S.DATA_SET TCS_DATASET,
    S.DAY TEST_DATE,
    S.HOUR,
    S.MINUTE,
    S.SECOND,
    S.TRUCK_FWD_IND,
    S.IR_TEMP,
    (
    SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
) sensor_offset_in,            
    CASE
      WHEN (S.RELATIVE_OFFSET <> -999 AND S.RELATIVE_OFFSET IS NOT NULL) THEN
        (           (SELECT SL.OFFSET_IN FROM 
            (SELECT C.CELL_NUMBER CELL, SM.MODEL, SN.SEQ, SN.OFFSET_FT*12 OFFSET_IN
              FROM MNR.CELL C JOIN MNR.LANE LN ON LN.CELL_ID=C.ID
                JOIN MNR.LAYER LY ON LY.LANE_ID=LN.ID
                JOIN MNR.SENSOR SN ON SN.LAYER_ID=LY.ID
                JOIN MNR.SENSOR_MODEL SM ON SN.SENSOR_MODEL_ID=SM.ID
            ) SL  WHERE SL.CELL=S.REFERENCE_CELL AND SL.MODEL = S.REFERENCE_MODEL AND SL.SEQ = S.REFERENCE_SEQUENCE
          )           + S.RELATIVE_OFFSET         ) 
      ELSE
        NULL
    END TIRE_OFFSET_IN FROM MNR.TCS_DATA_SETUP S 
WHERE REFERENCE_CELL IS NOT NULL AND REFERENCE_MODEL IS NOT NULL AND REFERENCE_SEQUENCE IS NOT NULL    
